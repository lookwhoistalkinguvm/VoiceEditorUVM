-template_context 06_uvm_api.00_base.00_uvm_barrier.function.000
-template_name (string name="", int threshold=0);
-template_start
  function new (string name="", int threshold=0);
-template_end
-template_context 06_uvm_api.00_base.00_uvm_barrier.function.001
-template_name cancel ();
-template_start
  virtual function void cancel ();
-template_end
-template_context 06_uvm_api.00_base.00_uvm_barrier.function.002
-template_name do_copy (uvm_object rhs);
-template_start
  virtual function void do_copy (uvm_object rhs);
-template_end
-template_context 06_uvm_api.00_base.00_uvm_barrier.function.003
-template_name do_print (uvm_printer printer);
-template_start
  virtual function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.00_base.00_uvm_barrier.function.004
-template_name get_num_waiters ();
-template_start
  virtual function int get_num_waiters ();
-template_end
-template_context 06_uvm_api.00_base.00_uvm_barrier.function.005
-template_name get_threshold ();
-template_start
  virtual function int get_threshold ();
-template_end
-template_context 06_uvm_api.00_base.00_uvm_barrier.function.006
-template_name reset (bit wakeup=1);
-template_start
  virtual function void reset (bit wakeup=1);
-template_end
-template_context 06_uvm_api.00_base.00_uvm_barrier.function.007
-template_name set_auto_reset (bit value=1);
-template_start
  virtual function void set_auto_reset (bit value=1);
-template_end
-template_context 06_uvm_api.00_base.00_uvm_barrier.function.008
-template_name set_threshold (int threshold);
-template_start
  virtual function void set_threshold (int threshold);
-template_end
-template_context 06_uvm_api.00_base.01_uvm_bottomup_phase.function.009
-template_name name);
-template_start
  function new(string name);
-template_end
-template_context 06_uvm_api.00_base.02_uvm_common_phases.function.010
-template_name exec_func(uvm_component comp, uvm_phase phase);
-template_start
   virtual function void exec_func(uvm_component comp, uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.02_uvm_common_phases.function.011
-template_name get();
-template_start
   static function uvm_build_phase get();
-template_end
-template_context 06_uvm_api.00_base.02_uvm_common_phases.function.012
-template_name name="build");
-template_start
   protected function new(string name="build");
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.013
-template_name flush();
-template_start
  extern virtual function void flush();
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.014
-template_name get_check_type();
-template_start
  extern virtual function bit get_check_type();
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.015
-template_name get_default () ;
-template_start
  static function uvm_comparer get_default () ;
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.016
-template_name get_miscompares();
-template_start
  extern virtual function string get_miscompares();
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.017
-template_name get_recursion_policy();
-template_start
  extern virtual function uvm_recursion_policy_enum get_recursion_policy();
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.018
-template_name get_severity ();
-template_start
  extern virtual function uvm_severity get_severity ();
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.019
-template_name m_current_context(string name="");
-template_start
  local function string m_current_context(string name="");
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.020
-template_name name="");
-template_start
	function new(string name="");
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.021
-template_name print_msg (string msg);
-template_start
  function void print_msg (string msg);
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.022
-template_name print_msg_object(uvm_object lhs, uvm_object rhs);
-template_start
  function void print_msg_object(uvm_object lhs, uvm_object rhs);
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.023
-template_name set_check_type( bit enabled );
-template_start
  extern virtual function void set_check_type( bit enabled );
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.024
-template_name set_default (uvm_comparer comparer) ;
-template_start
  static function void set_default (uvm_comparer comparer) ;
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.025
-template_name set_recursion_policy( uvm_recursion_policy_enum policy);
-template_start
  extern virtual function void set_recursion_policy( uvm_recursion_policy_enum policy);
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.026
-template_name set_result(int unsigned result) ;
-template_start
  extern virtual function void set_result(int unsigned result) ;
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.027
-template_name set_severity (uvm_severity severity);
-template_start
  extern virtual function void set_severity (uvm_severity severity);
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.028
-template_name set_show_max (int unsigned show_max);
-template_start
  extern virtual function void set_show_max (int unsigned show_max);
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.029
-template_name set_threshold (int unsigned threshold);
-template_start
  extern virtual function void set_threshold (int unsigned threshold);
-template_end
-template_context 06_uvm_api.00_base.03_uvm_comparer.function.030
-template_name set_verbosity (int unsigned verbosity);
-template_start
  extern virtual function void set_verbosity (int unsigned verbosity);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.031
-template_name (string name, uvm_component parent);
-template_start
  extern function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.032
-template_name accept_tr (uvm_transaction tr, time accept_time = 0);
-template_start
  extern function void accept_tr (uvm_transaction tr, time accept_time = 0);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.033
-template_name apply_config_settings (bit verbose = 0);
-template_start
  extern virtual function void apply_config_settings (bit verbose = 0);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.034
-template_name build();
-template_start
  extern virtual function void build();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.035
-template_name build_phase(uvm_phase phase);
-template_start
  extern virtual function void build_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.036
-template_name check();
-template_start
  extern virtual function void check();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.037
-template_name check_config_usage (bit recurse=1);
-template_start
  extern function void check_config_usage (bit recurse=1);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.038
-template_name check_phase(uvm_phase phase);
-template_start
  extern virtual function void check_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.039
-template_name clone  ();
-template_start
  extern virtual function uvm_object clone  ();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.040
-template_name connect();
-template_start
  extern virtual function void connect();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.041
-template_name connect_phase(uvm_phase phase);
-template_start
  extern virtual function void connect_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.042
-template_name create (string name="");
-template_start
  extern virtual function uvm_object create (string name="");
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.043
-template_name define_domain(uvm_domain domain);
-template_start
  extern virtual protected function void define_domain(uvm_domain domain);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.044
-template_name do_accept_tr (uvm_transaction tr);
-template_start
  extern virtual protected function void do_accept_tr (uvm_transaction tr);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.045
-template_name do_flush();
-template_start
  extern                   function void do_flush();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.046
-template_name do_print(uvm_printer printer);
-template_start
  extern         function void   do_print(uvm_printer printer);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.047
-template_name do_resolve_bindings();
-template_start
  extern                   function void do_resolve_bindings();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.048
-template_name end_of_elaboration();
-template_start
  extern virtual function void end_of_elaboration();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.049
-template_name end_of_elaboration_phase(uvm_phase phase);
-template_start
  extern virtual function void end_of_elaboration_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.050
-template_name extract();
-template_start
  extern virtual function void extract();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.051
-template_name extract_phase(uvm_phase phase);
-template_start
  extern virtual function void extract_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.052
-template_name final_phase(uvm_phase phase);
-template_start
  extern virtual function void final_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.053
-template_name flush ();
-template_start
  extern virtual           function void flush ();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.054
-template_name free_tr_stream(uvm_tr_stream stream);
-template_start
  extern virtual function void free_tr_stream(uvm_tr_stream stream);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.055
-template_name get_child (string name);
-template_start
  extern function uvm_component get_child (string name);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.056
-template_name get_children(ref uvm_component children[$]);
-template_start
  extern function void get_children(ref uvm_component children[$]);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.057
-template_name get_domain();
-template_start
  extern function uvm_domain get_domain();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.058
-template_name get_first_child (ref string name);
-template_start
  extern function int get_first_child (ref string name);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.059
-template_name get_full_name ();
-template_start
  extern virtual function string get_full_name ();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.060
-template_name get_next_child (ref string name);
-template_start
  extern function int get_next_child (ref string name);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.061
-template_name get_num_children ();
-template_start
  extern function int get_num_children ();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.062
-template_name get_parent ();
-template_start
  extern virtual function uvm_component get_parent ();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.063
-template_name get_tr_database();
-template_start
  extern virtual function uvm_tr_database get_tr_database();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.064
-template_name has_child (string name);
-template_start
  extern function int has_child (string name);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.065
-template_name lookup (string name);
-template_start
  extern function uvm_component lookup (string name);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.066
-template_name m_add_child(uvm_component child);
-template_start
  extern protected virtual function bit  m_add_child(uvm_component child);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.067
-template_name m_apply_verbosity_settings(uvm_phase phase);
-template_start
  extern function void m_apply_verbosity_settings(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.068
-template_name m_get_tr_database();
-template_start
  extern virtual function uvm_tr_database m_get_tr_database();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.069
-template_name m_set_full_name();
-template_start
  extern local     virtual function void m_set_full_name();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.070
-template_name m_unsupported_set_local(uvm_resource_base rsrc);
-template_start
  extern function void m_unsupported_set_local(uvm_resource_base rsrc);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.071
-template_name massage_scope(string scope);
-template_start
  extern function string massage_scope(string scope);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.072
-template_name phase_ended (uvm_phase phase);
-template_start
  extern virtual function void phase_ended (uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.073
-template_name phase_ready_to_end (uvm_phase phase);
-template_start
  extern virtual function void phase_ready_to_end (uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.074
-template_name phase_started (uvm_phase phase);
-template_start
  extern virtual function void phase_started (uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.075
-template_name print_config(bit recurse = 0, bit audit = 0);
-template_start
  extern function void print_config(bit recurse = 0, bit audit = 0);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.076
-template_name print_config_with_audit(bit recurse = 0);
-template_start
  extern function void print_config_with_audit(bit recurse = 0);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.077
-template_name report();
-template_start
  extern virtual function void report();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.078
-template_name report_phase(uvm_phase phase);
-template_start
  extern virtual function void report_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.079
-template_name resolve_bindings ();
-template_start
  extern virtual function void resolve_bindings ();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.080
-template_name set_domain(uvm_domain domain, int hier=1);
-template_start
  extern function void set_domain(uvm_domain domain, int hier=1);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.081
-template_name set_local(uvm_resource_base rsrc) ;
-template_start
  extern                   function void set_local(uvm_resource_base rsrc) ;
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.082
-template_name set_name (string name);
-template_start
  extern virtual function void set_name (string name);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.083
-template_name set_phase_imp(uvm_phase phase, uvm_phase imp, int hier=1);
-template_start
  extern function void set_phase_imp(uvm_phase phase, uvm_phase imp, int hier=1);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.084
-template_name set_report_default_file_hier (UVM_FILE file);
-template_start
  extern function void set_report_default_file_hier (UVM_FILE file);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.085
-template_name set_report_verbosity_level_hier (int verbosity);
-template_start
    extern function void set_report_verbosity_level_hier (int verbosity);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.086
-template_name set_tr_database(uvm_tr_database db);
-template_start
  extern virtual function void set_tr_database(uvm_tr_database db);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.087
-template_name start_of_simulation();
-template_start
  extern virtual function void start_of_simulation();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.088
-template_name start_of_simulation_phase(uvm_phase phase);
-template_start
  extern virtual function void start_of_simulation_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.function.089
-template_name use_automatic_config();
-template_start
  extern virtual function bit use_automatic_config();
-template_end
-template_context 06_uvm_api.00_base.05_uvm_config_db.function.090
-template_name (string inst_name, string field_name);
-template_start
  function new (string inst_name, string field_name);
-template_end
-template_context 06_uvm_api.00_base.06_uvm_copier.function.091
-template_name flush();
-template_start
function void flush();
-template_end
-template_context 06_uvm_api.00_base.06_uvm_copier.function.092
-template_name get_default () ;
-template_start
static function uvm_copier get_default () ;
-template_end
-template_context 06_uvm_api.00_base.06_uvm_copier.function.093
-template_name get_recursion_policy();
-template_start
virtual function uvm_recursion_policy_enum get_recursion_policy();
-template_end
-template_context 06_uvm_api.00_base.06_uvm_copier.function.094
-template_name name="uvm_copier") ;
-template_start
   function new(string name="uvm_copier") ;
-template_end
-template_context 06_uvm_api.00_base.06_uvm_copier.function.095
-template_name set_default (uvm_copier copier) ;
-template_start
static function void set_default (uvm_copier copier) ;
-template_end
-template_context 06_uvm_api.00_base.06_uvm_copier.function.096
-template_name set_recursion_policy (uvm_recursion_policy_enum policy);
-template_start
virtual function void set_recursion_policy (uvm_recursion_policy_enum policy);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.097
-template_name get();
-template_start
	static function uvm_coreservice_t get();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.098
-template_name get_default_comparer();
-template_start
	pure virtual function uvm_comparer get_default_comparer();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.099
-template_name get_default_copier();
-template_start
	pure virtual function uvm_copier get_default_copier();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.100
-template_name get_default_packer();
-template_start
	pure virtual function uvm_packer get_default_packer();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.101
-template_name get_default_printer();
-template_start
	pure virtual function uvm_printer get_default_printer();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.102
-template_name get_default_tr_database();
-template_start
	pure virtual function uvm_tr_database get_default_tr_database();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.103
-template_name get_factory();
-template_start
	pure virtual function uvm_factory get_factory();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.104
-template_name get_phase_max_ready_to_end();
-template_start
	pure virtual function int get_phase_max_ready_to_end();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.105
-template_name get_report_server();
-template_start
	pure virtual function uvm_report_server get_report_server();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.106
-template_name get_resource_pool();
-template_start
	pure virtual function uvm_resource_pool get_resource_pool();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.107
-template_name get_root();
-template_start
	pure virtual function uvm_root get_root();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.108
-template_name get_uvm_seeding();
-template_start
        pure virtual function bit get_uvm_seeding();
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.109
-template_name set(uvm_coreservice_t cs);
-template_start
	static function void set(uvm_coreservice_t cs);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.110
-template_name set_component_visitor(uvm_visitor#(uvm_component) v);
-template_start
	pure virtual function void set_component_visitor(uvm_visitor#(uvm_component) v);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.111
-template_name set_default_comparer(uvm_comparer comparer);
-template_start
	pure virtual function void set_default_comparer(uvm_comparer comparer);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.112
-template_name set_default_copier(uvm_copier copier);
-template_start
	pure virtual function void set_default_copier(uvm_copier copier);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.113
-template_name set_default_packer(uvm_packer packer);
-template_start
	pure virtual function void set_default_packer(uvm_packer packer);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.114
-template_name set_default_printer(uvm_printer printer);
-template_start
	pure virtual function void set_default_printer(uvm_printer printer);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.115
-template_name set_default_tr_database(uvm_tr_database db);
-template_start
	pure virtual function void set_default_tr_database(uvm_tr_database db);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.116
-template_name set_factory(uvm_factory f);
-template_start
	pure virtual function void set_factory(uvm_factory f);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.117
-template_name set_phase_max_ready_to_end(int max);
-template_start
	pure virtual function void set_phase_max_ready_to_end(int max);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.118
-template_name set_report_server(uvm_report_server server);
-template_start
	pure virtual function void set_report_server(uvm_report_server server);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.119
-template_name set_resource_pool (uvm_resource_pool pool);
-template_start
	pure virtual function void set_resource_pool (uvm_resource_pool pool);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.120
-template_name set_resource_pool_default_precedence(int unsigned precedence);
-template_start
	pure virtual function void set_resource_pool_default_precedence(int unsigned precedence);
-template_end
-template_context 06_uvm_api.00_base.07_uvm_coreservice.function.121
-template_name set_uvm_seeding(bit enable);
-template_start
        pure virtual function void set_uvm_seeding(bit enable);
-template_end
-template_context 06_uvm_api.00_base.08_uvm_domain.function.122
-template_name add_uvm_phases(uvm_phase schedule);
-template_start
  static function void add_uvm_phases(uvm_phase schedule);
-template_end
-template_context 06_uvm_api.00_base.08_uvm_domain.function.123
-template_name get_common_domain();
-template_start
  static function uvm_domain get_common_domain();
-template_end
-template_context 06_uvm_api.00_base.08_uvm_domain.function.124
-template_name get_domains(output uvm_domain domains[string]);
-template_start
  static function void get_domains(output uvm_domain domains[string]);
-template_end
-template_context 06_uvm_api.00_base.08_uvm_domain.function.125
-template_name get_uvm_domain();
-template_start
  static function uvm_domain get_uvm_domain();
-template_end
-template_context 06_uvm_api.00_base.08_uvm_domain.function.126
-template_name get_uvm_schedule();
-template_start
  static function uvm_phase get_uvm_schedule();
-template_end
-template_context 06_uvm_api.00_base.08_uvm_domain.function.127
-template_name jump(uvm_phase phase);
-template_start
  function void jump(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.08_uvm_domain.function.128
-template_name jump_all(uvm_phase phase);
-template_start
  static function void jump_all(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.08_uvm_domain.function.129
-template_name name);
-template_start
  function new(string name);
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.function.130
-template_name (string name="");
-template_start
	function new (string name="");
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.function.131
-template_name cancel ();
-template_start
	virtual function void cancel ();
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.function.132
-template_name do_copy (uvm_object rhs);
-template_start
	virtual function void do_copy (uvm_object rhs);
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.function.133
-template_name do_print (uvm_printer printer);
-template_start
	virtual function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.function.134
-template_name get_num_waiters ();
-template_start
	virtual function int get_num_waiters ();
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.function.135
-template_name get_trigger_time ();
-template_start
	virtual function time get_trigger_time ();
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.function.136
-template_name is_off ();
-template_start
	virtual function bit is_off ();
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.function.137
-template_name is_on ();
-template_start
	virtual function bit is_on ();
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.function.138
-template_name reset (bit wakeup = 0);
-template_start
	virtual function void reset (bit wakeup = 0);
-template_end
-template_context 06_uvm_api.00_base.10_uvm_event_callback.function.139
-template_name (string name="");
-template_start
  function new (string name="");
-template_end
-template_context 06_uvm_api.00_base.10_uvm_event_callback.function.140
-template_name create (string name="");
-template_start
  virtual function uvm_object create (string name="");
-template_end
-template_context 06_uvm_api.00_base.10_uvm_event_callback.function.141
-template_name post_trigger (uvm_event#(T) e, T data);
-template_start
  virtual function void post_trigger (uvm_event#(T) e, T data);
-template_end
-template_context 06_uvm_api.00_base.10_uvm_event_callback.function.142
-template_name pre_trigger (uvm_event#(T) e, T data);
-template_start
  virtual function bit pre_trigger (uvm_event#(T) e, T data);
-template_end
-template_context 06_uvm_api.00_base.11_uvm_field_op.function.143
-template_name (string name="");
-template_start
   function new (string name="");
-template_end
-template_context 06_uvm_api.00_base.11_uvm_field_op.function.144
-template_name disable_user_hook();
-template_start
   function void disable_user_hook();
-template_end
-template_context 06_uvm_api.00_base.11_uvm_field_op.function.145
-template_name flush();
-template_start
   virtual function void flush();
-template_end
-template_context 06_uvm_api.00_base.11_uvm_field_op.function.146
-template_name get_op_name();
-template_start
   virtual function string get_op_name();
-template_end
-template_context 06_uvm_api.00_base.11_uvm_field_op.function.147
-template_name get_op_type();
-template_start
   virtual function uvm_field_flag_t get_op_type();
-template_end
-template_context 06_uvm_api.00_base.11_uvm_field_op.function.148
-template_name get_policy();
-template_start
   virtual function uvm_policy get_policy();
-template_end
-template_context 06_uvm_api.00_base.11_uvm_field_op.function.149
-template_name get_rhs();
-template_start
   virtual function uvm_object get_rhs();
-template_end
-template_context 06_uvm_api.00_base.11_uvm_field_op.function.150
-template_name m_get_available_op() ;
-template_start
   static function uvm_field_op m_get_available_op() ;
-template_end
-template_context 06_uvm_api.00_base.11_uvm_field_op.function.151
-template_name m_recycle();
-template_start
   function void m_recycle();
-template_end
-template_context 06_uvm_api.00_base.11_uvm_field_op.function.152
-template_name set( uvm_field_flag_t op_type, uvm_policy policy = null, uvm_object rhs = null);
-template_start
   virtual function void set( uvm_field_flag_t op_type, uvm_policy policy = null, uvm_object rhs = null);
-template_end
-template_context 06_uvm_api.00_base.11_uvm_field_op.function.153
-template_name user_hook_enabled();
-template_start
   function bit user_hook_enabled();
-template_end
-template_context 06_uvm_api.00_base.12_uvm_globals.function.154
-template_name
-template_start
    protected function new();
-template_end
-template_context 06_uvm_api.00_base.12_uvm_globals.function.155
-template_name from_name(string name, ref T value);
-template_start
    static function bit from_name(string name, ref T value);
-template_end
-template_context 06_uvm_api.00_base.12_uvm_globals.function.156
-template_name get_core_state();
-template_start
function uvm_core_state get_core_state();
-template_end
-template_context 06_uvm_api.00_base.12_uvm_globals.function.157
-template_name m_init_map();
-template_start
    protected static function void m_init_map();
-template_end
-template_context 06_uvm_api.00_base.12_uvm_globals.function.158
-template_name uvm_bits_to_string(logic [UVM_LARGE_STRING:0] str);
-template_start
function string uvm_bits_to_string(logic [UVM_LARGE_STRING:0] str);
-template_end
-template_context 06_uvm_api.00_base.12_uvm_globals.function.159
-template_name uvm_get_report_object();
-template_start
function uvm_report_object uvm_get_report_object();
-template_end
-template_context 06_uvm_api.00_base.12_uvm_globals.function.160
-template_name uvm_init(uvm_coreservice_t cs=null);
-template_start
function void uvm_init(uvm_coreservice_t cs=null);
-template_end
-template_context 06_uvm_api.00_base.12_uvm_globals.function.161
-template_name uvm_is_match (string expr, string str);
-template_start
function bit uvm_is_match (string expr, string str);
-template_end
-template_context 06_uvm_api.00_base.12_uvm_globals.function.162
-template_name uvm_process_report_message(uvm_report_message report_message);
-template_start
function void uvm_process_report_message(uvm_report_message report_message);
-template_end
-template_context 06_uvm_api.00_base.12_uvm_globals.function.163
-template_name uvm_string_to_severity (string sev_str, output uvm_severity sev);
-template_start
function bit uvm_string_to_severity (string sev_str, output uvm_severity sev);
-template_end
-template_context 06_uvm_api.00_base.13_uvm_heartbeat.function.164
-template_name add (uvm_component comp);
-template_start
  function void add (uvm_component comp);
-template_end
-template_context 06_uvm_api.00_base.13_uvm_heartbeat.function.165
-template_name m_start_hb_process();
-template_start
  function void m_start_hb_process();
-template_end
-template_context 06_uvm_api.00_base.13_uvm_heartbeat.function.166
-template_name name, uvm_component cntxt, uvm_objection objection=null);
-template_start
  function new(string name, uvm_component cntxt, uvm_objection objection=null);
-template_end
-template_context 06_uvm_api.00_base.13_uvm_heartbeat.function.167
-template_name remove (uvm_component comp);
-template_start
  function void remove (uvm_component comp);
-template_end
-template_context 06_uvm_api.00_base.13_uvm_heartbeat.function.168
-template_name set_heartbeat (uvm_event#(uvm_object) e, ref uvm_component comps[$]);
-template_start
  function void set_heartbeat (uvm_event#(uvm_object) e, ref uvm_component comps[$]);
-template_end
-template_context 06_uvm_api.00_base.13_uvm_heartbeat.function.169
-template_name set_mode (uvm_heartbeat_modes mode = UVM_NO_HB_MODE);
-template_start
  function uvm_heartbeat_modes set_mode (uvm_heartbeat_modes mode = UVM_NO_HB_MODE);
-template_end
-template_context 06_uvm_api.00_base.13_uvm_heartbeat.function.170
-template_name start (uvm_event#(uvm_object) e=null);
-template_start
  function void start (uvm_event#(uvm_object) e=null);
-template_end
-template_context 06_uvm_api.00_base.13_uvm_heartbeat.function.171
-template_name stop ();
-template_start
  function void stop ();
-template_end
-template_context 06_uvm_api.00_base.14_uvm_links.function.172
-template_name do_get_lhs();
-template_start
   pure virtual function uvm_object do_get_lhs();
-template_end
-template_context 06_uvm_api.00_base.14_uvm_links.function.173
-template_name do_get_rhs();
-template_start
   pure virtual function uvm_object do_get_rhs();
-template_end
-template_context 06_uvm_api.00_base.14_uvm_links.function.174
-template_name do_set_lhs(uvm_object lhs);
-template_start
   pure virtual function void do_set_lhs(uvm_object lhs);
-template_end
-template_context 06_uvm_api.00_base.14_uvm_links.function.175
-template_name do_set_rhs(uvm_object rhs);
-template_start
   pure virtual function void do_set_rhs(uvm_object rhs);
-template_end
-template_context 06_uvm_api.00_base.14_uvm_links.function.176
-template_name get_lhs();
-template_start
   function uvm_object get_lhs();
-template_end
-template_context 06_uvm_api.00_base.14_uvm_links.function.177
-template_name get_rhs();
-template_start
   function uvm_object get_rhs();
-template_end
-template_context 06_uvm_api.00_base.14_uvm_links.function.178
-template_name name="unnamed-uvm_link_base");
-template_start
   function new(string name="unnamed-uvm_link_base");
-template_end
-template_context 06_uvm_api.00_base.14_uvm_links.function.179
-template_name set(uvm_object lhs, rhs);
-template_start
   function void set(uvm_object lhs, rhs);
-template_end
-template_context 06_uvm_api.00_base.14_uvm_links.function.180
-template_name set_lhs(uvm_object lhs);
-template_start
   function void set_lhs(uvm_object lhs);
-template_end
-template_context 06_uvm_api.00_base.14_uvm_links.function.181
-template_name set_rhs(uvm_object rhs);
-template_start
   function void set_rhs(uvm_object rhs);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.182
-template_name (string name="");
-template_start
  extern function new (string name="");
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.183
-template_name clone ();
-template_start
  extern virtual function uvm_object clone ();
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.184
-template_name compare (uvm_object rhs, uvm_comparer comparer=null);
-template_start
  extern function bit compare (uvm_object rhs, uvm_comparer comparer=null);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.185
-template_name convert2string();
-template_start
  extern virtual function string convert2string();
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.186
-template_name copy (uvm_object rhs, uvm_copier copier=null);
-template_start
  extern function void copy (uvm_object rhs, uvm_copier copier=null);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.187
-template_name create (string name=""); return null; endfunction
-template_start
  virtual function uvm_object create (string name=""); return null; endfunction
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.188
-template_name do_copy (uvm_object rhs);
-template_start
  extern virtual function void do_copy (uvm_object rhs);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.189
-template_name do_execute_op ( uvm_field_op op);
-template_start
  extern virtual function void do_execute_op ( uvm_field_op op);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.190
-template_name do_pack (uvm_packer packer);
-template_start
  extern virtual function void do_pack (uvm_packer packer);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.191
-template_name do_print (uvm_printer printer);
-template_start
  extern virtual function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.192
-template_name do_record (uvm_recorder recorder);
-template_start
  extern virtual function void do_record (uvm_recorder recorder);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.193
-template_name do_unpack (uvm_packer packer);
-template_start
  extern virtual function void do_unpack (uvm_packer packer);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.194
-template_name get_full_name ();
-template_start
  extern virtual function string get_full_name ();
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.195
-template_name get_inst_count();
-template_start
  extern static  function int get_inst_count();
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.196
-template_name get_inst_id ();
-template_start
  extern virtual function int get_inst_id ();
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.197
-template_name get_name ();
-template_start
  extern virtual function string get_name ();
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.198
-template_name get_object_type ();
-template_start
  extern virtual function uvm_object_wrapper get_object_type ();
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.199
-template_name get_type ();
-template_start
  extern static function uvm_object_wrapper get_type ();
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.200
-template_name get_type_name (); return "<unknown>"; endfunction
-template_start
  virtual function string get_type_name (); return "<unknown>"; endfunction
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.201
-template_name get_uvm_seeding();
-template_start
  extern static function bit get_uvm_seeding();
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.202
-template_name m_get_report_object();
-template_start
  extern protected virtual function uvm_report_object m_get_report_object();
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.203
-template_name m_pack        (inout uvm_packer packer);
-template_start
  extern local function void m_pack        (inout uvm_packer packer);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.204
-template_name m_unpack_post (uvm_packer packer);
-template_start
  extern local function int m_unpack_post (uvm_packer packer);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.205
-template_name m_unpack_pre  (inout uvm_packer packer);
-template_start
  extern local function void m_unpack_pre  (inout uvm_packer packer);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.206
-template_name m_unsupported_set_local(uvm_resource_base rsrc);
-template_start
  extern virtual function void m_unsupported_set_local(uvm_resource_base rsrc);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.207
-template_name print (uvm_printer printer=null);
-template_start
  extern function void print (uvm_printer printer=null);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.208
-template_name record (uvm_recorder recorder=null);
-template_start
  extern function void record (uvm_recorder recorder=null);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.209
-template_name reseed ();
-template_start
  extern function void reseed ();
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.210
-template_name set_local(uvm_resource_base rsrc) ;
-template_start
  extern virtual function void  set_local(uvm_resource_base rsrc) ;
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.211
-template_name set_name (string name);
-template_start
  extern virtual function void set_name (string name);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.212
-template_name set_uvm_seeding(bit enable);
-template_start
  extern static function void set_uvm_seeding(bit enable);
-template_end
-template_context 06_uvm_api.00_base.15_uvm_object.function.213
-template_name sprint (uvm_printer printer=null);
-template_start
  extern function string sprint (uvm_printer printer=null);
-template_end
-template_context 06_uvm_api.00_base.16_uvm_object_globals.function.214
-template_name uvm_radix_to_string(uvm_radix_enum radix);
-template_start
function string uvm_radix_to_string(uvm_radix_enum radix);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.215
-template_name enough_bits(int needed, string id);
-template_start
  extern function bit enough_bits(int needed, string id);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.216
-template_name flush ();
-template_start
  extern virtual function void flush ();
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.217
-template_name get_bits (ref bit unsigned bits[]);
-template_start
  extern virtual function void get_bits (ref bit unsigned bits[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.218
-template_name get_bytes(ref byte unsigned bytes[]);
-template_start
  extern virtual function void get_bytes(ref byte unsigned bytes[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.219
-template_name get_default () ;
-template_start
  static function uvm_packer get_default () ;
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.220
-template_name get_ints (ref int unsigned ints[]);
-template_start
  extern virtual function void get_ints (ref int unsigned ints[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.221
-template_name get_packed_bits (ref bit unsigned stream[]);
-template_start
  extern virtual function void get_packed_bits (ref bit unsigned stream[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.222
-template_name get_packed_bytes (ref byte unsigned stream[]);
-template_start
  extern virtual function void get_packed_bytes (ref byte unsigned stream[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.223
-template_name get_packed_ints (ref int unsigned stream[]);
-template_start
  extern virtual function void get_packed_ints (ref int unsigned stream[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.224
-template_name get_packed_longints (ref longint unsigned stream[]);
-template_start
  extern virtual function void get_packed_longints (ref longint unsigned stream[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.225
-template_name get_packed_size();
-template_start
  extern virtual function int get_packed_size();
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.226
-template_name index_error(int index, string id, int sz);
-template_start
  extern function void index_error(int index, string id, int sz);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.227
-template_name is_null ();
-template_start
  extern virtual function bit is_null ();
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.228
-template_name name="");
-template_start
  extern function new(string name="");
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.229
-template_name pack_bits(ref bit value[], input int size = -1);
-template_start
  extern virtual function void pack_bits(ref bit value[], input int size = -1);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.230
-template_name pack_bytes(ref byte value[], input int size = -1);
-template_start
  extern virtual function void pack_bytes(ref byte value[], input int size = -1);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.231
-template_name pack_field (uvm_bitstream_t value, int size);
-template_start
  extern virtual function void pack_field (uvm_bitstream_t value, int size);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.232
-template_name pack_field_int (uvm_integral_t value, int size);
-template_start
  extern virtual function void pack_field_int (uvm_integral_t value, int size);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.233
-template_name pack_ints(ref int value[], input int size = -1);
-template_start
  extern virtual function void pack_ints(ref int value[], input int size = -1);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.234
-template_name pack_object (uvm_object value);
-template_start
  extern virtual function void pack_object (uvm_object value);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.235
-template_name pack_real (real value);
-template_start
  extern virtual function void pack_real (real value);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.236
-template_name pack_string (string value);
-template_start
  extern virtual function void pack_string (string value);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.237
-template_name pack_time (time value);
-template_start
  extern virtual function void pack_time (time value);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.238
-template_name put_bits (ref bit unsigned bitstream[]);
-template_start
  extern virtual function void put_bits (ref bit unsigned bitstream[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.239
-template_name put_bytes(ref byte unsigned bytestream[]);
-template_start
  extern virtual function void put_bytes(ref byte unsigned bytestream[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.240
-template_name put_ints (ref int unsigned intstream[]);
-template_start
  extern virtual function void put_ints (ref int unsigned intstream[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.241
-template_name reset();
-template_start
  extern function void reset();
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.242
-template_name set_default (uvm_packer packer) ;
-template_start
  static function void set_default (uvm_packer packer) ;
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.243
-template_name set_packed_bits (ref bit unsigned stream[]);
-template_start
  extern virtual function void set_packed_bits (ref bit unsigned stream[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.244
-template_name set_packed_bytes (ref byte unsigned stream[]);
-template_start
  extern virtual function void set_packed_bytes (ref byte unsigned stream[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.245
-template_name set_packed_ints (ref int unsigned stream[]);
-template_start
  extern virtual function void set_packed_ints (ref int unsigned stream[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.246
-template_name set_packed_longints (ref longint unsigned stream[]);
-template_start
  extern virtual function void set_packed_longints (ref longint unsigned stream[]);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.247
-template_name set_packed_size();
-template_start
  extern virtual function void set_packed_size();
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.248
-template_name unpack_bits(ref bit value[], input int size = -1);
-template_start
  extern virtual function void unpack_bits(ref bit value[], input int size = -1);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.249
-template_name unpack_bytes(ref byte value[], input int size = -1);
-template_start
  extern virtual function void unpack_bytes(ref byte value[], input int size = -1);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.250
-template_name unpack_field (int size);
-template_start
  extern virtual function uvm_bitstream_t unpack_field (int size);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.251
-template_name unpack_field_int (int size);
-template_start
  extern virtual function uvm_integral_t unpack_field_int (int size);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.252
-template_name unpack_ints(ref int value[], input int size = -1);
-template_start
  extern virtual function void unpack_ints(ref int value[], input int size = -1);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.253
-template_name unpack_object (uvm_object value);
-template_start
  extern virtual function void unpack_object (uvm_object value);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.254
-template_name unpack_object_ext  (inout uvm_object value);
-template_start
  extern virtual function void unpack_object_ext  (inout uvm_object value);
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.255
-template_name unpack_real ();
-template_start
  extern virtual function real unpack_real ();
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.256
-template_name unpack_string ();
-template_start
  extern virtual function string unpack_string ();
-template_end
-template_context 06_uvm_api.00_base.17_uvm_packer.function.257
-template_name unpack_time ();
-template_start
  extern virtual function time unpack_time ();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.258
-template_name clear(uvm_phase_state state = UVM_PHASE_DORMANT);
-template_start
  extern function void clear(uvm_phase_state state = UVM_PHASE_DORMANT);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.259
-template_name convert2string();
-template_start
  function string convert2string();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.260
-template_name end_prematurely() ;
-template_start
  extern function void end_prematurely() ;
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.261
-template_name exec_func(uvm_component comp, uvm_phase phase); endfunction
-template_start
  virtual function void exec_func(uvm_component comp, uvm_phase phase); endfunction
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.262
-template_name find(uvm_phase phase, bit stay_in_scope=1);
-template_start
  extern function uvm_phase find(uvm_phase phase, bit stay_in_scope=1);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.263
-template_name find_by_name(string name, bit stay_in_scope=1);
-template_start
  extern function uvm_phase find_by_name(string name, bit stay_in_scope=1);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.264
-template_name get_adjacent_predecessor_nodes(ref uvm_phase pred[]);
-template_start
  extern function void get_adjacent_predecessor_nodes(ref uvm_phase pred[]);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.265
-template_name get_adjacent_successor_nodes(ref uvm_phase succ[]);
-template_start
  extern function void get_adjacent_successor_nodes(ref uvm_phase succ[]);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.266
-template_name get_begin_node(); if (m_imp != null) return this; return null; endfunction
-template_start
  function uvm_phase get_begin_node(); if (m_imp != null) return this; return null; endfunction
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.267
-template_name get_default_max_ready_to_end_iterations();
-template_start
  extern static function int get_default_max_ready_to_end_iterations();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.268
-template_name get_domain();
-template_start
  extern function uvm_domain get_domain();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.269
-template_name get_domain_name();
-template_start
  extern function string get_domain_name();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.270
-template_name get_end_node();   return m_end_node; endfunction
-template_start
  function uvm_phase get_end_node();   return m_end_node; endfunction
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.271
-template_name get_full_name();
-template_start
  extern virtual function string get_full_name();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.272
-template_name get_imp();
-template_start
  extern function uvm_phase get_imp();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.273
-template_name get_jump_target();
-template_start
  extern function uvm_phase get_jump_target();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.274
-template_name get_max_ready_to_end_iterations();
-template_start
  extern virtual function int get_max_ready_to_end_iterations();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.275
-template_name get_objection();
-template_start
  function uvm_objection get_objection();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.276
-template_name get_objection_count( uvm_object obj=null );
-template_start
  extern virtual function int get_objection_count( uvm_object obj=null );
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.277
-template_name get_parent();
-template_start
  extern function uvm_phase get_parent();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.278
-template_name get_phase_type();
-template_start
  extern function uvm_phase_type get_phase_type();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.279
-template_name get_predecessors_for_successors(output bit pred_of_succ[uvm_phase]);
-template_start
  extern local function void get_predecessors_for_successors(output bit pred_of_succ[uvm_phase]);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.280
-template_name get_run_count();
-template_start
  extern function int get_run_count();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.281
-template_name get_schedule(bit hier = 0);
-template_start
  extern function uvm_phase get_schedule(bit hier = 0);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.282
-template_name get_schedule_name(bit hier = 0);
-template_start
  extern function string get_schedule_name(bit hier = 0);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.283
-template_name get_state();
-template_start
  extern function uvm_phase_state get_state();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.284
-template_name is(uvm_phase phase);
-template_start
  extern function bit is(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.285
-template_name is_after(uvm_phase phase);
-template_start
  extern function bit is_after(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.286
-template_name is_before(uvm_phase phase);
-template_start
  extern function bit is_before(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.287
-template_name is_domain();
-template_start
  function bit is_domain();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.288
-template_name jump(uvm_phase phase);
-template_start
  extern function void jump(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.289
-template_name jump_all(uvm_phase phase);
-template_start
  extern static function void jump_all(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.290
-template_name kill();
-template_start
  extern function void kill();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.291
-template_name kill_successors();
-template_start
  extern function void kill_successors();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.292
-template_name m_aa2string(bit aa[uvm_phase]); // TBD tidy
-template_start
  local function string m_aa2string(bit aa[uvm_phase]); // TBD tidy
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.293
-template_name m_find_predecessor(uvm_phase phase, bit stay_in_scope=1, uvm_phase orig_phase=null);
-template_start
  extern function uvm_phase m_find_predecessor(uvm_phase phase, bit stay_in_scope=1, uvm_phase orig_phase=null);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.294
-template_name m_find_predecessor_by_name(string name, bit stay_in_scope=1, uvm_phase orig_phase=null);
-template_start
  extern function uvm_phase m_find_predecessor_by_name(string name, bit stay_in_scope=1, uvm_phase orig_phase=null);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.295
-template_name m_find_successor(uvm_phase phase, bit stay_in_scope=1, uvm_phase orig_phase=null);
-template_start
  extern function uvm_phase m_find_successor(uvm_phase phase, bit stay_in_scope=1, uvm_phase orig_phase=null);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.296
-template_name m_find_successor_by_name(string name, bit stay_in_scope=1, uvm_phase orig_phase=null);
-template_start
  extern function uvm_phase m_find_successor_by_name(string name, bit stay_in_scope=1, uvm_phase orig_phase=null);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.297
-template_name m_get_transitive_children(ref uvm_phase phases[$]);
-template_start
  virtual function void m_get_transitive_children(ref uvm_phase phases[$]);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.298
-template_name m_print_successors();
-template_start
  extern function void m_print_successors();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.299
-template_name m_print_termination_state();
-template_start
  extern local function void m_print_termination_state();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.300
-template_name m_terminate_phase();
-template_start
  extern local function void m_terminate_phase();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.301
-template_name set_default_max_ready_to_end_iterations(int max);
-template_start
  extern static function void set_default_max_ready_to_end_iterations(int max);
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.302
-template_name set_jump_phase(uvm_phase phase) ;
-template_start
  extern function void set_jump_phase(uvm_phase phase) ;
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.function.303
-template_name set_max_ready_to_end_iterations(int max);
-template_start
  extern virtual function void set_max_ready_to_end_iterations(int max);
-template_end
-template_context 06_uvm_api.00_base.19_uvm_policy.function.304
-template_name (string name="");
-template_start
function new (string name="");
-template_end
-template_context 06_uvm_api.00_base.19_uvm_policy.function.305
-template_name clear_extension( uvm_object_wrapper ext_type );
-template_start
virtual function void clear_extension( uvm_object_wrapper ext_type );
-template_end
-template_context 06_uvm_api.00_base.19_uvm_policy.function.306
-template_name clear_extensions();
-template_start
virtual function void clear_extensions();
-template_end
-template_context 06_uvm_api.00_base.19_uvm_policy.function.307
-template_name extension_exists( uvm_object_wrapper ext_type );
-template_start
virtual function bit extension_exists( uvm_object_wrapper ext_type );
-template_end
-template_context 06_uvm_api.00_base.19_uvm_policy.function.308
-template_name flush();
-template_start
virtual function void flush();
-template_end
-template_context 06_uvm_api.00_base.19_uvm_policy.function.309
-template_name get_active_object();
-template_start
virtual function uvm_object get_active_object();
-template_end
-template_context 06_uvm_api.00_base.19_uvm_policy.function.310
-template_name get_extension(uvm_object_wrapper ext_type );
-template_start
virtual function uvm_object get_extension(uvm_object_wrapper ext_type );
-template_end
-template_context 06_uvm_api.00_base.19_uvm_policy.function.311
-template_name pop_active_object();
-template_start
virtual function uvm_object pop_active_object();
-template_end
-template_context 06_uvm_api.00_base.19_uvm_policy.function.312
-template_name push_active_object( uvm_object obj );
-template_start
virtual function void push_active_object( uvm_object obj );
-template_end
-template_context 06_uvm_api.00_base.19_uvm_policy.function.313
-template_name set_extension( uvm_object extension );
-template_start
virtual function uvm_object set_extension( uvm_object extension );
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.314
-template_name (string name="");
-template_start
  function new (string name="");
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.315
-template_name add (KEY key, T item);
-template_start
  virtual function void add (KEY key, T item);
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.316
-template_name delete (KEY key);
-template_start
  virtual function void delete (KEY key);
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.317
-template_name do_copy (uvm_object rhs);
-template_start
  virtual function void do_copy (uvm_object rhs);
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.318
-template_name do_print (uvm_printer printer);
-template_start
  virtual function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.319
-template_name exists (KEY key);
-template_start
  virtual function int exists (KEY key);
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.320
-template_name first (ref KEY key);
-template_start
  virtual function int first (ref KEY key);
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.321
-template_name get (KEY key);
-template_start
  virtual function T get (KEY key);
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.322
-template_name get_global (KEY key);
-template_start
  static function T get_global (KEY key);
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.323
-template_name get_global_pool ();
-template_start
  static function this_type get_global_pool ();
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.324
-template_name last (ref KEY key);
-template_start
  virtual function int last (ref KEY key);
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.325
-template_name next (ref KEY key);
-template_start
  virtual function int next (ref KEY key);
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.326
-template_name num ();
-template_start
  virtual function int num ();
-template_end
-template_context 06_uvm_api.00_base.20_uvm_pool.function.327
-template_name prev (ref KEY key);
-template_start
  virtual function int prev (ref KEY key);
-template_end
-template_context 06_uvm_api.00_base.21_uvm_port_base.function.328
-template_name (string name, uvm_component parent);
-template_start
  function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.00_base.21_uvm_port_base.function.329
-template_name is_export();
-template_start
  pure virtual function bit is_export();
-template_end
-template_context 06_uvm_api.00_base.21_uvm_port_base.function.330
-template_name is_imp();
-template_start
  pure virtual function bit is_imp();
-template_end
-template_context 06_uvm_api.00_base.21_uvm_port_base.function.331
-template_name is_port();
-template_start
  pure virtual function bit is_port();
-template_end
-template_context 06_uvm_api.00_base.21_uvm_port_base.function.332
-template_name use_automatic_config();
-template_start
  virtual function bit use_automatic_config();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.333
-template_name emit ();
-template_start
  extern virtual function string emit ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.334
-template_name flush ();
-template_start
  extern virtual function void flush ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.335
-template_name format_footer();
-template_start
  virtual function string format_footer();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.336
-template_name format_header();
-template_start
  virtual function string format_header();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.337
-template_name format_row (uvm_printer_row_info row);
-template_start
  extern virtual function string format_row (uvm_printer_row_info row);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.338
-template_name get_begin_elements ();
-template_start
  extern virtual function int get_begin_elements ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.339
-template_name get_bottom_element ();
-template_start
  extern protected virtual function uvm_printer_element get_bottom_element ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.340
-template_name get_default() ;
-template_start
  extern static function uvm_printer get_default() ;
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.341
-template_name get_default_radix ();
-template_start
  extern virtual function uvm_radix_enum get_default_radix ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.342
-template_name get_end_elements ();
-template_start
  extern virtual function int get_end_elements ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.343
-template_name get_file ();
-template_start
  extern virtual function UVM_FILE get_file ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.344
-template_name get_id_enabled ();
-template_start
  extern virtual function bit get_id_enabled ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.345
-template_name get_knobs() ; return knobs; endfunction
-template_start
protected function m_uvm_printer_knobs get_knobs() ; return knobs; endfunction
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.346
-template_name get_line_prefix ();
-template_start
  extern virtual function string get_line_prefix ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.347
-template_name get_max_depth ();
-template_start
  extern virtual function int get_max_depth ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.348
-template_name get_name_enabled ();
-template_start
  extern virtual function bit get_name_enabled ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.349
-template_name get_radix_enabled ();
-template_start
  extern virtual function bit get_radix_enabled ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.350
-template_name get_radix_string (uvm_radix_enum radix);
-template_start
  extern virtual function string get_radix_string (uvm_radix_enum radix);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.351
-template_name get_recursion_policy ();
-template_start
  extern virtual function uvm_recursion_policy_enum get_recursion_policy ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.352
-template_name get_root_enabled ();
-template_start
  extern virtual function bit get_root_enabled ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.353
-template_name get_size_enabled ();
-template_start
  extern virtual function bit get_size_enabled ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.354
-template_name get_top_element ();
-template_start
  extern protected virtual function uvm_printer_element get_top_element ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.355
-template_name get_type_name_enabled ();
-template_start
  extern virtual function bit get_type_name_enabled ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.356
-template_name get_unused_element() ;
-template_start
  extern function uvm_printer_element get_unused_element() ;
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.357
-template_name index_string (int index, string name="");
-template_start
  extern  function string index_string (int index, string name="");
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.358
-template_name istop ();
-template_start
  extern  function bit istop ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.359
-template_name m_get_stack_size(); return m_element_stack.size(); endfunction
-template_start
  protected function int m_get_stack_size(); return m_element_stack.size(); endfunction
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.360
-template_name name="") ;
-template_start
  extern function new(string name="") ;
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.361
-template_name pop_element ();
-template_start
  extern virtual function void pop_element ();
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.362
-template_name print_array_footer (int size = 0);
-template_start
  extern virtual  function void print_array_footer (int size = 0);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.363
-template_name print_array_range (int min, int max);
-template_start
  extern virtual function void print_array_range (int min, int max);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.364
-template_name set_begin_elements (int elements = 5);
-template_start
  extern virtual function void set_begin_elements (int elements = 5);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.365
-template_name set_default(uvm_printer printer) ;
-template_start
  extern static function void set_default(uvm_printer printer) ;
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.366
-template_name set_default_radix (uvm_radix_enum radix);
-template_start
  extern virtual function void set_default_radix (uvm_radix_enum radix);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.367
-template_name set_end_elements (int elements = 5);
-template_start
  extern virtual function void set_end_elements (int elements = 5);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.368
-template_name set_file (UVM_FILE fl);
-template_start
  extern virtual function void set_file (UVM_FILE fl);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.369
-template_name set_id_enabled (bit enabled);
-template_start
  extern virtual function void set_id_enabled (bit enabled);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.370
-template_name set_line_prefix (string prefix);
-template_start
  extern virtual function void set_line_prefix (string prefix);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.371
-template_name set_max_depth (int depth);
-template_start
  extern virtual function void set_max_depth (int depth);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.372
-template_name set_name_enabled (bit enabled);
-template_start
  extern virtual function void set_name_enabled (bit enabled);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.373
-template_name set_radix_enabled (bit enabled);
-template_start
  extern virtual function void set_radix_enabled (bit enabled);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.374
-template_name set_radix_string (uvm_radix_enum radix, string prefix);
-template_start
  extern virtual function void set_radix_string (uvm_radix_enum radix, string prefix);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.375
-template_name set_recursion_policy (uvm_recursion_policy_enum policy);
-template_start
  extern virtual function void set_recursion_policy (uvm_recursion_policy_enum policy);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.376
-template_name set_root_enabled (bit enabled);
-template_start
  extern virtual function void set_root_enabled (bit enabled);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.377
-template_name set_size_enabled (bit enabled);
-template_start
  extern virtual function void set_size_enabled (bit enabled);
-template_end
-template_context 06_uvm_api.00_base.22_uvm_printer.function.378
-template_name set_type_name_enabled (bit enabled);
-template_start
  extern virtual function void set_type_name_enabled (bit enabled);
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.379
-template_name (string name="");
-template_start
  function new (string name="");
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.380
-template_name convert2string();
-template_start
  virtual function string convert2string();
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.381
-template_name delete (int index=-1);
-template_start
  virtual function void delete (int index=-1);
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.382
-template_name do_copy (uvm_object rhs);
-template_start
  virtual function void do_copy (uvm_object rhs);
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.383
-template_name get (int index);
-template_start
  virtual function T get (int index);
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.384
-template_name get_global (int index);
-template_start
  static function T get_global (int index);
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.385
-template_name get_global_queue ();
-template_start
  static function this_type get_global_queue ();
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.386
-template_name insert (int index, T item);
-template_start
  virtual function void insert (int index, T item);
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.387
-template_name pop_back();
-template_start
  virtual function T pop_back();
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.388
-template_name pop_front();
-template_start
  virtual function T pop_front();
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.389
-template_name push_back(T item);
-template_start
  virtual function void push_back(T item);
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.390
-template_name push_front(T item);
-template_start
  virtual function void push_front(T item);
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.function.391
-template_name size ();
-template_start
  virtual function int size ();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.392
-template_name check_handle_kind (string htype, int handle);
-template_start
  virtual function int check_handle_kind (string htype, int handle);
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.393
-template_name close(time close_time = 0);
-template_start
   function void close(time close_time = 0);
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.394
-template_name do_close(time close_time);
-template_start
   protected virtual function void do_close(time close_time);
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.395
-template_name do_free();
-template_start
   protected virtual function void do_free();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.396
-template_name end_tr (int handle, time end_time=0);
-template_start
  virtual function void end_tr (int handle, time end_time=0);
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.397
-template_name flush();
-template_start
  virtual function void flush();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.398
-template_name free(time close_time = 0);
-template_start
   function void free(time close_time = 0);
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.399
-template_name free_tr(int handle);
-template_start
  virtual function void free_tr(int handle);
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.400
-template_name get_close_time();
-template_start
   function time get_close_time();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.401
-template_name get_handle();
-template_start
   function int get_handle();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.402
-template_name get_open_time();
-template_start
   function time get_open_time();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.403
-template_name get_record_attribute_handle();
-template_start
   virtual function int get_record_attribute_handle();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.404
-template_name get_recorder_from_handle(int id);
-template_start
   static function uvm_recorder get_recorder_from_handle(int id);
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.405
-template_name get_recursion_policy();
-template_start
  virtual function uvm_recursion_policy_enum get_recursion_policy();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.406
-template_name get_stream();
-template_start
   function uvm_tr_stream get_stream();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.407
-template_name is_closed();
-template_start
   function bit is_closed();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.408
-template_name is_open();
-template_start
   function bit is_open();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.409
-template_name m_do_open(uvm_tr_stream stream, time open_time, string type_name);
-template_start
  function void m_do_open(uvm_tr_stream stream, time open_time, string type_name);
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.410
-template_name m_free_id(int id);
-template_start
   static function void m_free_id(int id);
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.411
-template_name name = "uvm_recorder");
-template_start
  function new(string name = "uvm_recorder");
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.412
-template_name open_file();
-template_start
  virtual function bit open_file();
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.413
-template_name set_recursion_policy(uvm_recursion_policy_enum policy);
-template_start
  virtual function void set_recursion_policy(uvm_recursion_policy_enum policy);
-template_end
-template_context 06_uvm_api.00_base.24_uvm_recorder.function.414
-template_name use_record_attribute();
-template_start
  virtual function bit use_record_attribute();
-template_end
-template_context 06_uvm_api.00_base.25_uvm_registry.function.415
-template_name create(string name, uvm_component parent, string contxt="");
-template_start
  static function T create(string name, uvm_component parent, string contxt="");
-template_end
-template_context 06_uvm_api.00_base.25_uvm_registry.function.416
-template_name get();
-template_start
  static function this_type get();
-template_end
-template_context 06_uvm_api.00_base.25_uvm_registry.function.417
-template_name get_type_name();
-template_start
  virtual function string get_type_name();
-template_end
-template_context 06_uvm_api.00_base.25_uvm_registry.function.418
-template_name initialize();
-template_start
  virtual function void initialize();
-template_end
-template_context 06_uvm_api.00_base.25_uvm_registry.function.419
-template_name type_name();
-template_start
   static function string type_name();
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.420
-template_name do_print (uvm_printer printer);
-template_start
  virtual function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.421
-template_name format_action(uvm_action action);
-template_start
  static function string format_action(uvm_action action);
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.422
-template_name get_action(uvm_severity severity, string id);
-template_start
  function uvm_action get_action(uvm_severity severity, string id);
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.423
-template_name get_file_handle(uvm_severity severity, string id);
-template_start
  function UVM_FILE get_file_handle(uvm_severity severity, string id);
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.424
-template_name get_severity_id_file(uvm_severity severity, string id);
-template_start
  local function UVM_FILE get_severity_id_file(uvm_severity severity, string id);
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.425
-template_name get_verbosity_level(uvm_severity severity=UVM_INFO, string id="" );
-template_start
  function int get_verbosity_level(uvm_severity severity=UVM_INFO, string id="" );
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.426
-template_name initialize();
-template_start
  function void initialize();
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.427
-template_name name = "uvm_report_handler");
-template_start
  function new(string name = "uvm_report_handler");
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.428
-template_name process_report_message(uvm_report_message report_message);
-template_start
  virtual function void process_report_message(uvm_report_message report_message);
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.429
-template_name set_default_file (UVM_FILE file);
-template_start
  function void set_default_file (UVM_FILE file);
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.430
-template_name set_id_action(input string id, input uvm_action action);
-template_start
  function void set_id_action(input string id, input uvm_action action);
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.431
-template_name set_id_file (string id, UVM_FILE file);
-template_start
  function void set_id_file (string id, UVM_FILE file);
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.432
-template_name set_id_verbosity(input string id, input int verbosity);
-template_start
  function void set_id_verbosity(input string id, input int verbosity);
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.433
-template_name set_severity_file (uvm_severity severity, UVM_FILE file);
-template_start
  function void set_severity_file (uvm_severity severity, UVM_FILE file);
-template_end
-template_context 06_uvm_api.00_base.26_uvm_report_handler.function.434
-template_name set_verbosity_level(int verbosity_level);
-template_start
  function void set_verbosity_level(int verbosity_level);
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.435
-template_name clone();
-template_start
   function uvm_report_message_element_base clone();
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.436
-template_name copy(uvm_report_message_element_base rhs);
-template_start
   function void copy(uvm_report_message_element_base rhs);
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.437
-template_name do_clone();
-template_start
   pure virtual function uvm_report_message_element_base do_clone();
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.438
-template_name do_copy(uvm_report_message_element_base rhs);
-template_start
   pure virtual function void do_copy(uvm_report_message_element_base rhs);
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.439
-template_name do_print(uvm_printer printer);
-template_start
   pure virtual function void do_print(uvm_printer printer);
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.440
-template_name do_record(uvm_recorder recorder);
-template_start
   pure virtual function void do_record(uvm_recorder recorder);
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.441
-template_name get_action();
-template_start
   virtual function uvm_action get_action();
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.442
-template_name get_name();
-template_start
   virtual function string get_name();
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.443
-template_name print(uvm_printer printer);
-template_start
   function void print(uvm_printer printer);
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.444
-template_name record(uvm_recorder recorder);
-template_start
   function void record(uvm_recorder recorder);
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.445
-template_name set_action(uvm_action action);
-template_start
   virtual function void set_action(uvm_action action);
-template_end
-template_context 06_uvm_api.00_base.27_uvm_report_message.function.446
-template_name set_name(string name);
-template_start
   virtual function void set_name(string name);
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.447
-template_name get_report_action(uvm_severity severity, string id);
-template_start
  function int get_report_action(uvm_severity severity, string id);
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.448
-template_name get_report_file_handle(uvm_severity severity, string id);
-template_start
  function int get_report_file_handle(uvm_severity severity, string id);
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.449
-template_name get_report_handler();
-template_start
  function uvm_report_handler get_report_handler();
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.450
-template_name get_report_max_verbosity_level();
-template_start
  function int get_report_max_verbosity_level();
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.451
-template_name get_report_verbosity_level(uvm_severity severity=UVM_INFO, string id="");
-template_start
  function int get_report_verbosity_level(uvm_severity severity=UVM_INFO, string id="");
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.452
-template_name name = "");
-template_start
  function new(string name = "");
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.453
-template_name set_report_default_file (UVM_FILE file);
-template_start
  function void set_report_default_file (UVM_FILE file);
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.454
-template_name set_report_handler(uvm_report_handler handler);
-template_start
  function void set_report_handler(uvm_report_handler handler);
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.455
-template_name set_report_id_action (string id, uvm_action action);
-template_start
  function void set_report_id_action (string id, uvm_action action);
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.456
-template_name set_report_id_file (string id, UVM_FILE file);
-template_start
  function void set_report_id_file (string id, UVM_FILE file);
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.457
-template_name set_report_id_verbosity (string id, int verbosity);
-template_start
  function void set_report_id_verbosity (string id, int verbosity);
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.458
-template_name set_report_severity_file (uvm_severity severity, UVM_FILE file);
-template_start
  function void set_report_severity_file (uvm_severity severity, UVM_FILE file);
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.459
-template_name set_report_verbosity_level (int verbosity_level);
-template_start
  function void set_report_verbosity_level (int verbosity_level);
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.460
-template_name uvm_get_report_object();
-template_start
  function uvm_report_object uvm_get_report_object();
-template_end
-template_context 06_uvm_api.00_base.28_uvm_report_object.function.461
-template_name uvm_process_report_message(uvm_report_message report_message);
-template_start
  virtual function void uvm_process_report_message(uvm_report_message report_message);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.462
-template_name do_copy (uvm_object rhs);
-template_start
        function void do_copy (uvm_object rhs);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.463
-template_name get_id_count(string id);
-template_start
        pure virtual  function int get_id_count(string id);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.464
-template_name get_id_set(output string q[$]);
-template_start
        pure virtual function void get_id_set(output string q[$]);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.465
-template_name get_max_quit_count();
-template_start
        pure virtual  function int get_max_quit_count();
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.466
-template_name get_message_database();
-template_start
        pure virtual function uvm_tr_database get_message_database();
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.467
-template_name get_quit_count();
-template_start
        pure virtual  function int get_quit_count();
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.468
-template_name get_server();
-template_start
        static function uvm_report_server get_server();
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.469
-template_name get_severity_count(uvm_severity severity);
-template_start
        pure virtual  function int get_severity_count(uvm_severity severity);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.470
-template_name get_severity_set(output uvm_severity q[$]);
-template_start
        pure virtual function void get_severity_set(output uvm_severity q[$]);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.471
-template_name get_type_name();
-template_start
        function string get_type_name();
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.472
-template_name name="base");
-template_start
        function new(string name="base");
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.473
-template_name process_report_message(uvm_report_message report_message);
-template_start
        pure virtual function void process_report_message(uvm_report_message report_message);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.474
-template_name report_summarize(UVM_FILE file = UVM_STDOUT);
-template_start
        pure virtual function void report_summarize(UVM_FILE file = UVM_STDOUT);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.475
-template_name set_id_count(string id, int count);
-template_start
        pure virtual  function void set_id_count(string id, int count);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.476
-template_name set_max_quit_count(int count, bit overridable = 1);
-template_start
        pure virtual  function void set_max_quit_count(int count, bit overridable = 1);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.477
-template_name set_message_database(uvm_tr_database database);
-template_start
        pure virtual function void set_message_database(uvm_tr_database database);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.478
-template_name set_quit_count(int quit_count);
-template_start
        pure virtual  function void set_quit_count(int quit_count);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.479
-template_name set_server(uvm_report_server server);
-template_start
        static function void set_server(uvm_report_server server);
-template_end
-template_context 06_uvm_api.00_base.29_uvm_report_server.function.480
-template_name set_severity_count(uvm_severity severity, int count);
-template_start
        pure virtual  function void set_severity_count(uvm_severity severity, int count);
-template_end
-template_context 06_uvm_api.00_base.30_uvm_resource_db.function.481
-template_name
-template_start
  protected function new();
-template_end
-template_context 06_uvm_api.00_base.30_uvm_resource_db.function.482
-template_name dump();
-template_start
  static function void dump();
-template_end
-template_context 06_uvm_api.00_base.30_uvm_resource_db.function.483
-template_name get_by_type(string scope);
-template_start
  static function rsrc_t get_by_type(string scope);
-template_end
-template_context 06_uvm_api.00_base.30_uvm_resource_db.function.484
-template_name set_default(string scope, string name);
-template_start
  static function rsrc_t set_default(string scope, string name);
-template_end
-template_context 06_uvm_api.00_base.31_uvm_resource_db_options.function.485
-template_name init();
-template_start
  static local function void init();
-template_end
-template_context 06_uvm_api.00_base.31_uvm_resource_db_options.function.486
-template_name is_tracing();
-template_start
  static function bit is_tracing();
-template_end
-template_context 06_uvm_api.00_base.31_uvm_resource_db_options.function.487
-template_name turn_off_tracing();
-template_start
  static function void turn_off_tracing();
-template_end
-template_context 06_uvm_api.00_base.31_uvm_resource_db_options.function.488
-template_name turn_on_tracing();
-template_start
  static function void turn_on_tracing();
-template_end
-template_context 06_uvm_api.00_base.32_uvm_resource_specializations.function.489
-template_name convert2string();
-template_start
  function string convert2string();
-template_end
-template_context 06_uvm_api.00_base.32_uvm_resource_specializations.function.490
-template_name get_by_name(string scope, string name, bit rpterr = 1); \
-template_start
  static function this_subtype get_by_name(string scope, string name, bit rpterr = 1); \
-template_end
-template_context 06_uvm_api.00_base.32_uvm_resource_specializations.function.491
-template_name name, string s = "*");
-template_start
  function new(string name, string s = "*");
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.492
-template_name ();
-template_start
	extern protected function new ();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.493
-template_name build_phase(uvm_phase phase);
-template_start
	extern function void build_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.494
-template_name die();
-template_start
	virtual function void die();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.495
-template_name end_of_elaboration_phase(uvm_phase phase);
-template_start
	function void end_of_elaboration_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.496
-template_name find (string comp_match);
-template_start
	extern function uvm_component find (string comp_match);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.497
-template_name get();
-template_start
	extern static function uvm_root get();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.498
-template_name get_finish_on_completion();
-template_start
  virtual  function bit get_finish_on_completion();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.499
-template_name get_type_name();
-template_start
	virtual function string get_type_name();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.500
-template_name m_add_child (uvm_component child);
-template_start
	extern protected virtual function bit m_add_child (uvm_component child);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.501
-template_name m_check_uvm_field_flag_size();
-template_start
	extern function void m_check_uvm_field_flag_size();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.502
-template_name m_check_verbosity();
-template_start
	extern function void m_check_verbosity();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.503
-template_name m_do_config_settings();
-template_start
	extern local function void m_do_config_settings();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.504
-template_name m_do_dump_args();
-template_start
	extern local function void m_do_dump_args();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.505
-template_name m_do_factory_settings();
-template_start
	extern local function void m_do_factory_settings();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.506
-template_name m_do_max_quit_settings();
-template_start
	extern local function void m_do_max_quit_settings();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.507
-template_name m_do_timeout_settings();
-template_start
	extern local function void m_do_timeout_settings();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.508
-template_name m_do_verbosity_settings();
-template_start
	extern local function void m_do_verbosity_settings();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.509
-template_name m_process_config(string cfg, bit is_int);
-template_start
	extern local function void m_process_config(string cfg, bit is_int);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.510
-template_name m_process_default_sequence(string cfg);
-template_start
	extern local function void m_process_default_sequence(string cfg);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.511
-template_name m_process_inst_override(string ovr);
-template_start
	extern local function void m_process_inst_override(string ovr);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.512
-template_name m_process_type_override(string ovr);
-template_start
	extern local function void m_process_type_override(string ovr);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.513
-template_name m_uvm_get_root();
-template_start
	static function uvm_root m_uvm_get_root();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.514
-template_name phase_started(uvm_phase phase);
-template_start
	function void phase_started(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.515
-template_name print_topology  (uvm_printer printer=null);
-template_start
	extern function void print_topology  (uvm_printer printer=null);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.516
-template_name report_header(UVM_FILE file = 0);
-template_start
	extern virtual function void report_header(UVM_FILE file = 0);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.517
-template_name set_finish_on_completion(bit f);
-template_start
  virtual  function void set_finish_on_completion(bit f);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.function.518
-template_name set_timeout(time timeout, bit overridable=1);
-template_start
	extern function void set_timeout(time timeout, bit overridable=1);
-template_end
-template_context 06_uvm_api.00_base.34_uvm_run_test_callback.function.519
-template_name add( uvm_run_test_callback cb );
-template_start
  extern static function bit add( uvm_run_test_callback cb );
-template_end
-template_context 06_uvm_api.00_base.34_uvm_run_test_callback.function.520
-template_name delete( uvm_run_test_callback cb );
-template_start
  extern static function bit delete( uvm_run_test_callback cb );
-template_end
-template_context 06_uvm_api.00_base.34_uvm_run_test_callback.function.521
-template_name m_do_post_run_test();
-template_start
  extern static function void m_do_post_run_test();
-template_end
-template_context 06_uvm_api.00_base.34_uvm_run_test_callback.function.522
-template_name m_do_pre_abort();
-template_start
  extern static function void m_do_pre_abort();
-template_end
-template_context 06_uvm_api.00_base.34_uvm_run_test_callback.function.523
-template_name m_do_pre_run_test();
-template_start
  extern static function void m_do_pre_run_test();
-template_end
-template_context 06_uvm_api.00_base.34_uvm_run_test_callback.function.524
-template_name post_run_test();
-template_start
  virtual function void post_run_test();
-template_end
-template_context 06_uvm_api.00_base.34_uvm_run_test_callback.function.525
-template_name pre_abort();
-template_start
  virtual function void pre_abort();
-template_end
-template_context 06_uvm_api.00_base.34_uvm_run_test_callback.function.526
-template_name pre_run_test();
-template_start
  virtual function void pre_run_test();
-template_end
-template_context 06_uvm_api.00_base.34_uvm_run_test_callback.function.527
-template_name string name="uvm_run_test_callback");
-template_start
  extern function new( string name="uvm_run_test_callback");
-template_end
-template_context 06_uvm_api.00_base.35_uvm_runtime_phases.function.528
-template_name get();
-template_start
   static function uvm_pre_reset_phase get();
-template_end
-template_context 06_uvm_api.00_base.35_uvm_runtime_phases.function.529
-template_name name="pre_reset");
-template_start
   protected function new(string name="pre_reset");
-template_end
-template_context 06_uvm_api.00_base.36_uvm_spell_chkr.function.530
-template_name check ( /* const */ ref tab_t strtab, input string s);
-template_start
  static function bit check ( /* const */ ref tab_t strtab, input string s);
-template_end
-template_context 06_uvm_api.00_base.36_uvm_spell_chkr.function.531
-template_name levenshtein_distance(string s, string t);
-template_start
  static local function int levenshtein_distance(string s, string t);
-template_end
-template_context 06_uvm_api.00_base.36_uvm_spell_chkr.function.532
-template_name minimum(int a, int b, int c);
-template_start
  static local function int minimum(int a, int b, int c);
-template_end
-template_context 06_uvm_api.00_base.37_uvm_task_phase.function.533
-template_name name);
-template_start
  function new(string name);
-template_end
-template_context 06_uvm_api.00_base.38_uvm_text_tr_database.function.534
-template_name do_close_db();
-template_start
   protected virtual function bit do_close_db();
-template_end
-template_context 06_uvm_api.00_base.38_uvm_text_tr_database.function.535
-template_name do_establish_link(uvm_link_base link);
-template_start
   protected virtual function void do_establish_link(uvm_link_base link);
-template_end
-template_context 06_uvm_api.00_base.38_uvm_text_tr_database.function.536
-template_name do_open_db();
-template_start
   protected virtual function bit do_open_db();
-template_end
-template_context 06_uvm_api.00_base.38_uvm_text_tr_database.function.537
-template_name name="unnamed-uvm_text_tr_database");
-template_start
   function new(string name="unnamed-uvm_text_tr_database");
-template_end
-template_context 06_uvm_api.00_base.38_uvm_text_tr_database.function.538
-template_name set_file_name(string filename);
-template_start
   function void set_file_name(string filename);
-template_end
-template_context 06_uvm_api.00_base.39_uvm_text_tr_stream.function.539
-template_name do_close();
-template_start
   protected virtual function void do_close();
-template_end
-template_context 06_uvm_api.00_base.39_uvm_text_tr_stream.function.540
-template_name do_free();
-template_start
   protected virtual function void do_free();
-template_end
-template_context 06_uvm_api.00_base.39_uvm_text_tr_stream.function.541
-template_name name="unnamed-uvm_text_tr_stream");
-template_start
   function new(string name="unnamed-uvm_text_tr_stream");
-template_end
-template_context 06_uvm_api.00_base.40_uvm_topdown_phase.function.542
-template_name name);
-template_start
  function new(string name);
-template_end
-template_context 06_uvm_api.00_base.41_uvm_tr_database.function.543
-template_name close_db();
-template_start
   function bit close_db();
-template_end
-template_context 06_uvm_api.00_base.41_uvm_tr_database.function.544
-template_name do_close_db();
-template_start
   pure virtual protected function bit do_close_db();
-template_end
-template_context 06_uvm_api.00_base.41_uvm_tr_database.function.545
-template_name do_establish_link(uvm_link_base link);
-template_start
   pure virtual protected function void do_establish_link(uvm_link_base link);
-template_end
-template_context 06_uvm_api.00_base.41_uvm_tr_database.function.546
-template_name do_open_db();
-template_start
   pure virtual protected function bit do_open_db();
-template_end
-template_context 06_uvm_api.00_base.41_uvm_tr_database.function.547
-template_name establish_link(uvm_link_base link);
-template_start
   function void establish_link(uvm_link_base link);
-template_end
-template_context 06_uvm_api.00_base.41_uvm_tr_database.function.548
-template_name get_streams(ref uvm_tr_stream q[$]);
-template_start
   function unsigned get_streams(ref uvm_tr_stream q[$]);
-template_end
-template_context 06_uvm_api.00_base.41_uvm_tr_database.function.549
-template_name is_open();
-template_start
   function bit is_open();
-template_end
-template_context 06_uvm_api.00_base.41_uvm_tr_database.function.550
-template_name m_free_stream(uvm_tr_stream stream);
-template_start
   function void m_free_stream(uvm_tr_stream stream);
-template_end
-template_context 06_uvm_api.00_base.41_uvm_tr_database.function.551
-template_name name="unnamed-uvm_tr_database");
-template_start
   function new(string name="unnamed-uvm_tr_database");
-template_end
-template_context 06_uvm_api.00_base.41_uvm_tr_database.function.552
-template_name open_db();
-template_start
   function bit open_db();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.553
-template_name (string name="", uvm_component initiator=null);
-template_start
  extern function new (string name="", uvm_component initiator=null);
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.554
-template_name accept_tr (time accept_time = 0);
-template_start
  extern function void accept_tr (time accept_time = 0);
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.555
-template_name begin_tr (time begin_time = 0);
-template_start
  extern function int begin_tr (time begin_time = 0);
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.556
-template_name disable_recording ();
-template_start
  extern function void disable_recording ();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.557
-template_name do_accept_tr ();
-template_start
  extern virtual protected function void do_accept_tr ();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.558
-template_name do_begin_tr ();
-template_start
  extern virtual protected function void do_begin_tr ();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.559
-template_name do_copy   (uvm_object rhs);
-template_start
  extern virtual function void do_copy   (uvm_object rhs);
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.560
-template_name do_end_tr ();
-template_start
  extern virtual protected function void do_end_tr ();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.561
-template_name do_print  (uvm_printer printer);
-template_start
  extern virtual function void do_print  (uvm_printer printer);
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.562
-template_name do_record (uvm_recorder recorder);
-template_start
  extern virtual function void do_record (uvm_recorder recorder);
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.563
-template_name enable_recording (uvm_tr_stream stream);
-template_start
  extern function void enable_recording (uvm_tr_stream stream);
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.564
-template_name end_tr (time end_time=0, bit free_handle=1);
-template_start
  extern function void end_tr (time end_time=0, bit free_handle=1);
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.565
-template_name get_accept_time    ();
-template_start
  extern function time   get_accept_time    ();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.566
-template_name get_begin_time     ();
-template_start
  extern function time   get_begin_time     ();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.567
-template_name get_end_time       ();
-template_start
  extern function time   get_end_time       ();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.568
-template_name get_event_pool ();
-template_start
  extern function uvm_event_pool get_event_pool ();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.569
-template_name get_initiator ();
-template_start
  extern function uvm_component get_initiator ();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.570
-template_name get_tr_handle ();
-template_start
  extern function int get_tr_handle ();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.571
-template_name get_transaction_id();
-template_start
  extern function int get_transaction_id();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.572
-template_name is_active ();
-template_start
  extern function bit is_active ();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.573
-template_name is_recording_enabled();
-template_start
  extern function bit is_recording_enabled();
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.574
-template_name set_initiator (uvm_component initiator);
-template_start
  extern function void set_initiator (uvm_component initiator);
-template_end
-template_context 06_uvm_api.00_base.42_uvm_transaction.function.575
-template_name set_transaction_id(int id);
-template_start
  extern function void set_transaction_id(int id);
-template_end
-template_context 06_uvm_api.00_base.43_uvm_traversal.function.576
-template_name (string name = "");
-template_start
  function new (string name = "");
-template_end
-template_context 06_uvm_api.00_base.43_uvm_traversal.function.577
-template_name begin_v(); endfunction
-template_start
  virtual function void begin_v(); endfunction
-template_end
-template_context 06_uvm_api.00_base.43_uvm_traversal.function.578
-template_name end_v(); endfunction
-template_start
  virtual function void end_v(); endfunction
-template_end
-template_context 06_uvm_api.00_base.43_uvm_traversal.function.579
-template_name visit(NODE node);
-template_start
  pure virtual function void visit(NODE node);
-template_end
-template_context 06_uvm_api.00_base.44_uvm_version.function.580
-template_name uvm_revision_string();
-template_start
function string uvm_revision_string();
-template_end
-template_context 06_uvm_api.01_comps.00_uvm_agent.function.581
-template_name (string name, uvm_component parent);
-template_start
  function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.01_comps.00_uvm_agent.function.582
-template_name build_phase(uvm_phase phase);
-template_start
  function void build_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.01_comps.00_uvm_agent.function.583
-template_name get_is_active();
-template_start
  virtual function uvm_active_passive_enum get_is_active();
-template_end
-template_context 06_uvm_api.01_comps.01_uvm_algorithmic_comparator.function.584
-template_name connect_phase(uvm_phase phase);
-template_start
  virtual function void connect_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.01_comps.01_uvm_algorithmic_comparator.function.585
-template_name name, uvm_component parent=null, TRANSFORMER transformer=null);
-template_start
 function new(string name, uvm_component parent=null, TRANSFORMER transformer=null);
-template_end
-template_context 06_uvm_api.01_comps.01_uvm_algorithmic_comparator.function.586
-template_name write( input BEFORE b );
-template_start
  function void write( input BEFORE b );
-template_end
-template_context 06_uvm_api.01_comps.02_uvm_driver.function.587
-template_name (string name, uvm_component parent);
-template_start
  function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.01_comps.03_uvm_env.function.588
-template_name (string name="env", uvm_component parent=null);
-template_start
  function new (string name="env", uvm_component parent=null);
-template_end
-template_context 06_uvm_api.01_comps.04_uvm_in_order_comparator.function.589
-template_name connect_phase(uvm_phase phase);
-template_start
  virtual function void connect_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.01_comps.04_uvm_in_order_comparator.function.590
-template_name flush();
-template_start
  virtual function void flush();
-template_end
-template_context 06_uvm_api.01_comps.04_uvm_in_order_comparator.function.591
-template_name name, uvm_component parent);
-template_start
  function new(string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.01_comps.05_uvm_monitor.function.592
-template_name (string name, uvm_component parent);
-template_start
  function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.01_comps.06_uvm_pair.function.593
-template_name (string name="", T1 f=null, T2 s=null);
-template_start
  function new (string name="", T1 f=null, T2 s=null);
-template_end
-template_context 06_uvm_api.01_comps.06_uvm_pair.function.594
-template_name do_compare(uvm_object rhs, uvm_comparer comparer);
-template_start
  virtual function bit do_compare(uvm_object rhs, uvm_comparer comparer);
-template_end
-template_context 06_uvm_api.01_comps.06_uvm_pair.function.595
-template_name do_copy (uvm_object rhs);
-template_start
  virtual function void do_copy (uvm_object rhs);
-template_end
-template_context 06_uvm_api.01_comps.07_uvm_policies.function.596
-template_name comp(T a, T b);
-template_start
  static function bit comp(T a, T b);
-template_end
-template_context 06_uvm_api.01_comps.08_uvm_push_driver.function.597
-template_name (string name, uvm_component parent);
-template_start
  function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.01_comps.08_uvm_push_driver.function.598
-template_name check_port_connections();
-template_start
  function void check_port_connections();
-template_end
-template_context 06_uvm_api.01_comps.08_uvm_push_driver.function.599
-template_name end_of_elaboration_phase(uvm_phase phase);
-template_start
  virtual function void end_of_elaboration_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.01_comps.09_uvm_random_stimulus.function.600
-template_name name, uvm_component parent);
-template_start
  function new(string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.01_comps.10_uvm_scoreboard.function.601
-template_name (string name, uvm_component parent);
-template_start
  function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.01_comps.11_uvm_subscriber.function.602
-template_name (string name, uvm_component parent);
-template_start
  function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.01_comps.11_uvm_subscriber.function.603
-template_name write(T t);
-template_start
  pure virtual function void write(T t);
-template_end
-template_context 06_uvm_api.01_comps.12_uvm_test.function.604
-template_name (string name, uvm_component parent);
-template_start
  function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.02_dap.00_uvm_get_to_lock_dap.function.605
-template_name convert2string();
-template_start
   virtual function string convert2string();
-template_end
-template_context 06_uvm_api.02_dap.00_uvm_get_to_lock_dap.function.606
-template_name do_copy(uvm_object rhs);
-template_start
   virtual function void do_copy(uvm_object rhs);
-template_end
-template_context 06_uvm_api.02_dap.00_uvm_get_to_lock_dap.function.607
-template_name do_pack(uvm_packer packer);
-template_start
   virtual function void do_pack(uvm_packer packer);
-template_end
-template_context 06_uvm_api.02_dap.00_uvm_get_to_lock_dap.function.608
-template_name do_print(uvm_printer printer);
-template_start
   virtual function void do_print(uvm_printer printer);
-template_end
-template_context 06_uvm_api.02_dap.00_uvm_get_to_lock_dap.function.609
-template_name do_unpack(uvm_packer packer);
-template_start
   virtual function void do_unpack(uvm_packer packer);
-template_end
-template_context 06_uvm_api.02_dap.00_uvm_get_to_lock_dap.function.610
-template_name get();
-template_start
   virtual  function T get();
-template_end
-template_context 06_uvm_api.02_dap.00_uvm_get_to_lock_dap.function.611
-template_name name="unnamed-uvm_get_to_lock_dap#(T)");
-template_start
   function new(string name="unnamed-uvm_get_to_lock_dap#(T)");
-template_end
-template_context 06_uvm_api.02_dap.00_uvm_get_to_lock_dap.function.612
-template_name set(T value);
-template_start
   virtual function void set(T value);
-template_end
-template_context 06_uvm_api.02_dap.00_uvm_get_to_lock_dap.function.613
-template_name try_get(output T value);
-template_start
   virtual function bit try_get(output T value);
-template_end
-template_context 06_uvm_api.02_dap.00_uvm_get_to_lock_dap.function.614
-template_name try_set(T value);
-template_start
   virtual function bit try_set(T value);
-template_end
-template_context 06_uvm_api.02_dap.01_uvm_set_before_get_dap.function.615
-template_name convert2string();
-template_start
   virtual function string convert2string();
-template_end
-template_context 06_uvm_api.02_dap.01_uvm_set_before_get_dap.function.616
-template_name do_copy(uvm_object rhs);
-template_start
   virtual function void do_copy(uvm_object rhs);
-template_end
-template_context 06_uvm_api.02_dap.01_uvm_set_before_get_dap.function.617
-template_name do_pack(uvm_packer packer);
-template_start
   virtual function void do_pack(uvm_packer packer);
-template_end
-template_context 06_uvm_api.02_dap.01_uvm_set_before_get_dap.function.618
-template_name do_print(uvm_printer printer);
-template_start
   virtual function void do_print(uvm_printer printer);
-template_end
-template_context 06_uvm_api.02_dap.01_uvm_set_before_get_dap.function.619
-template_name do_unpack(uvm_packer packer);
-template_start
   virtual function void do_unpack(uvm_packer packer);
-template_end
-template_context 06_uvm_api.02_dap.01_uvm_set_before_get_dap.function.620
-template_name get();
-template_start
   virtual  function T get();
-template_end
-template_context 06_uvm_api.02_dap.01_uvm_set_before_get_dap.function.621
-template_name name="unnamed-uvm_set_before_get_dap#(T)");
-template_start
   function new(string name="unnamed-uvm_set_before_get_dap#(T)");
-template_end
-template_context 06_uvm_api.02_dap.01_uvm_set_before_get_dap.function.622
-template_name set(T value);
-template_start
   virtual function void set(T value);
-template_end
-template_context 06_uvm_api.02_dap.01_uvm_set_before_get_dap.function.623
-template_name try_get(output T value);
-template_start
   virtual function bit try_get(output T value);
-template_end
-template_context 06_uvm_api.02_dap.01_uvm_set_before_get_dap.function.624
-template_name try_set(T value);
-template_start
   virtual function bit try_set(T value);
-template_end
-template_context 06_uvm_api.02_dap.02_uvm_set_get_dap_base.function.625
-template_name get();
-template_start
   pure virtual function T get();
-template_end
-template_context 06_uvm_api.02_dap.02_uvm_set_get_dap_base.function.626
-template_name name="unnamed-uvm_set_get_dap_base#(T)");
-template_start
   function new(string name="unnamed-uvm_set_get_dap_base#(T)");
-template_end
-template_context 06_uvm_api.02_dap.02_uvm_set_get_dap_base.function.627
-template_name set(T value);
-template_start
   pure virtual function void set(T value);
-template_end
-template_context 06_uvm_api.02_dap.02_uvm_set_get_dap_base.function.628
-template_name try_get(output T value);
-template_start
   pure virtual function bit try_get(output T value);
-template_end
-template_context 06_uvm_api.02_dap.02_uvm_set_get_dap_base.function.629
-template_name try_set(T value);
-template_start
   pure virtual function bit try_set(T value);
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.630
-template_name convert2string();
-template_start
   virtual function string convert2string();
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.631
-template_name do_copy(uvm_object rhs);
-template_start
   virtual function void do_copy(uvm_object rhs);
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.632
-template_name do_pack(uvm_packer packer);
-template_start
   virtual function void do_pack(uvm_packer packer);
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.633
-template_name do_print(uvm_printer printer);
-template_start
   virtual function void do_print(uvm_printer printer);
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.634
-template_name do_unpack(uvm_packer packer);
-template_start
   virtual function void do_unpack(uvm_packer packer);
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.635
-template_name get();
-template_start
   virtual  function T get();
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.636
-template_name is_locked();
-template_start
   function bit is_locked();
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.637
-template_name lock();
-template_start
   function void lock();
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.638
-template_name name="unnamed-uvm_simple_lock_dap#(T)");
-template_start
   function new(string name="unnamed-uvm_simple_lock_dap#(T)");
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.639
-template_name set(T value);
-template_start
   virtual function void set(T value);
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.640
-template_name try_get(output T value);
-template_start
   virtual function bit try_get(output T value);
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.641
-template_name try_set(T value);
-template_start
   virtual function bit try_set(T value);
-template_end
-template_context 06_uvm_api.02_dap.03_uvm_simple_lock_dap.function.642
-template_name unlock();
-template_start
   function void unlock();
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.function.643
-template_name uvm_hdl_check_path(string path);
-template_start
  function int uvm_hdl_check_path(string path);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.function.644
-template_name uvm_hdl_check_path(string path);
-template_start
  import "DPI-C" context function int uvm_hdl_check_path(string path);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.function.645
-template_name uvm_hdl_deposit(string path, uvm_hdl_data_t value);
-template_start
  function int uvm_hdl_deposit(string path, uvm_hdl_data_t value);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.function.646
-template_name uvm_hdl_deposit(string path, uvm_hdl_data_t value);
-template_start
  import "DPI-C" context function int uvm_hdl_deposit(string path, uvm_hdl_data_t value);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.function.647
-template_name uvm_hdl_force(string path, uvm_hdl_data_t value);
-template_start
  function int uvm_hdl_force(string path, uvm_hdl_data_t value);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.function.648
-template_name uvm_hdl_force(string path, uvm_hdl_data_t value);
-template_start
  import "DPI-C" context function int uvm_hdl_force(string path, uvm_hdl_data_t value);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.function.649
-template_name uvm_hdl_read(string path, output uvm_hdl_data_t value);
-template_start
  function int uvm_hdl_read(string path, output uvm_hdl_data_t value);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.function.650
-template_name uvm_hdl_read(string path, output uvm_hdl_data_t value);
-template_start
  import "DPI-C" context function int uvm_hdl_read(string path, output uvm_hdl_data_t value);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.function.651
-template_name uvm_hdl_release(string path);
-template_start
  import "DPI-C" context function int uvm_hdl_release(string path);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.function.652
-template_name uvm_hdl_release(string path, output uvm_hdl_data_t value);
-template_start
  function int uvm_hdl_release(string path, output uvm_hdl_data_t value);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.function.653
-template_name uvm_hdl_release_and_read(string path, inout uvm_hdl_data_t value);
-template_start
  import "DPI-C" context function int uvm_hdl_release_and_read(string path, inout uvm_hdl_data_t value);
-template_end
-template_context 06_uvm_api.03_dpi.01_uvm_regex.function.654
-template_name uvm_glob_to_re(string glob);
-template_start
function string uvm_glob_to_re(string glob);
-template_end
-template_context 06_uvm_api.03_dpi.01_uvm_regex.function.655
-template_name uvm_glob_to_re(string glob);
-template_start
import "DPI-C" context function string uvm_glob_to_re(string glob);
-template_end
-template_context 06_uvm_api.03_dpi.01_uvm_regex.function.656
-template_name uvm_re_match(string re, string str);
-template_start
function int uvm_re_match(string re, string str);
-template_end
-template_context 06_uvm_api.03_dpi.01_uvm_regex.function.657
-template_name uvm_re_match(string re, string str);
-template_start
import "DPI-C" context function int uvm_re_match(string re, string str);
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.658
-template_name uvm_dpi_get_next_arg(int init=0);
-template_start
function string uvm_dpi_get_next_arg(int init=0);
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.659
-template_name uvm_dpi_get_next_arg(int init=0);
-template_start
function string uvm_dpi_get_next_arg(int init=0);
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.660
-template_name uvm_dpi_get_next_arg_c (int init);
-template_start
import "DPI-C" function string uvm_dpi_get_next_arg_c (int init);
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.661
-template_name uvm_dpi_get_tool_name();
-template_start
function string uvm_dpi_get_tool_name();
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.662
-template_name uvm_dpi_get_tool_name();
-template_start
function string uvm_dpi_get_tool_name();
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.663
-template_name uvm_dpi_get_tool_name_c ();
-template_start
import "DPI-C" function string uvm_dpi_get_tool_name_c ();
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.664
-template_name uvm_dpi_get_tool_version();
-template_start
function string uvm_dpi_get_tool_version();
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.665
-template_name uvm_dpi_get_tool_version();
-template_start
function string uvm_dpi_get_tool_version();
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.666
-template_name uvm_dpi_get_tool_version_c ();
-template_start
import "DPI-C" function string uvm_dpi_get_tool_version_c ();
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.667
-template_name uvm_dpi_regcomp(string regex);
-template_start
import "DPI-C" function chandle uvm_dpi_regcomp(string regex);
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.668
-template_name uvm_dpi_regcomp(string regex); return null; endfunction
-template_start
function chandle uvm_dpi_regcomp(string regex); return null; endfunction
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.669
-template_name uvm_dpi_regexec(chandle preg, string str);
-template_start
import "DPI-C" function int uvm_dpi_regexec(chandle preg, string str);
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.670
-template_name uvm_dpi_regexec(chandle preg, string str); return 0; endfunction
-template_start
function int uvm_dpi_regexec(chandle preg, string str); return 0; endfunction
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.671
-template_name uvm_dpi_regfree(chandle preg);
-template_start
import "DPI-C" function void uvm_dpi_regfree(chandle preg);
-template_end
-template_context 06_uvm_api.03_dpi.02_uvm_svcmd_dpi.function.672
-template_name uvm_dpi_regfree(chandle preg); endfunction
-template_start
function void uvm_dpi_regfree(chandle preg); endfunction
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.673
-template_name (string name, uvm_component parent); \
-template_start
  function new (string name, uvm_component parent); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.674
-template_name create (string name=""); \
-template_start
   function uvm_object create (string name=""); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.675
-template_name do_execute_op( uvm_field_op op );                                 \
-template_start
function void do_execute_op( uvm_field_op op );                                 \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.676
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.677
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.678
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.679
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.680
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.681
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.682
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.683
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.684
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.685
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.686
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.687
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.688
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.689
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.690
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.691
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.692
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.693
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.694
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.695
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.696
-template_name get_type_name(); \
-template_start
     virtual function string get_type_name(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.697
-template_name get_type_name(); \
-template_start
     virtual function string get_type_name(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.698
-template_name type_name(); \
-template_start
     static function string type_name(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.699
-template_name (string name, uvm_component parent); \
-template_start
  function new (string name, uvm_component parent); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.700
-template_name create (string name=""); \
-template_start
   function uvm_object create (string name=""); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.701
-template_name do_execute_op( uvm_field_op op );                                 \
-template_start
function void do_execute_op( uvm_field_op op );                                 \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.702
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.703
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.704
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.705
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.706
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.707
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.708
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.709
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.710
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.711
-template_name get_object_type(); \
-template_start
   virtual function uvm_object_wrapper get_object_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.712
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.713
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.714
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.715
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.716
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.717
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.718
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.719
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.720
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.721
-template_name get_type(); \
-template_start
   static function type_id get_type(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.722
-template_name get_type_name(); \
-template_start
     virtual function string get_type_name(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.723
-template_name get_type_name(); \
-template_start
     virtual function string get_type_name(); \
-template_end
-template_context 06_uvm_api.04_macros.00_uvm_object_defines.function.724
-template_name type_name(); \
-template_start
     static function string type_name(); \
-template_end
-template_context 06_uvm_api.04_macros.01_uvm_phase_defines.function.725
-template_name name=`"PHASE`"); \
-template_start
          protected function new(string name=`"PHASE`"); \
-template_end
-template_context 06_uvm_api.04_macros.02_uvm_sequence_defines.function.726
-template_name add_typewide_sequence(uvm_object_wrapper seq_type); \
-template_start
   static function void add_typewide_sequence(uvm_object_wrapper seq_type); \
-template_end
-template_context 06_uvm_api.04_macros.02_uvm_sequence_defines.function.727
-template_name add_typewide_sequences(uvm_object_wrapper seq_types[$]); \
-template_start
   static function void add_typewide_sequences(uvm_object_wrapper seq_types[$]); \
-template_end
-template_context 06_uvm_api.04_macros.02_uvm_sequence_defines.function.728
-template_name init_sequence_library(); \
-template_start
   function void init_sequence_library(); \
-template_end
-template_context 06_uvm_api.04_macros.02_uvm_sequence_defines.function.729
-template_name m_add_typewide_sequence(uvm_object_wrapper seq_type); \
-template_start
   static function bit m_add_typewide_sequence(uvm_object_wrapper seq_type); \
-template_end
-template_context 06_uvm_api.04_macros.02_uvm_sequence_defines.function.730
-template_name m_set_p_sequencer();\
-template_start
  virtual function void m_set_p_sequencer();\
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.731
-template_name Xadd_vregX(uvm_vreg vreg);
-template_start
   /*local*/ extern function void Xadd_vregX(uvm_vreg vreg);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.732
-template_name Xdelete_vregX(uvm_vreg vreg);
-template_start
   /*local*/ extern function void Xdelete_vregX(uvm_vreg vreg);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.733
-template_name Xlock_modelX();
-template_start
   /*local*/ extern function void Xlock_modelX();
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.734
-template_name add_coverage(uvm_reg_cvr_t models);
-template_start
   extern virtual protected function void add_coverage(uvm_reg_cvr_t models);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.735
-template_name add_map(uvm_reg_map map);
-template_start
   /*local*/ extern function void add_map(uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.736
-template_name backdoor_read_func(uvm_reg_item rw);
-template_start
   extern virtual function uvm_status_e backdoor_read_func(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.737
-template_name build_coverage(uvm_reg_cvr_t models);
-template_start
   extern protected function uvm_reg_cvr_t build_coverage(uvm_reg_cvr_t models);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.738
-template_name clear_hdl_path (string kind = "RTL");
-template_start
   extern function void clear_hdl_path (string kind = "RTL");
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.739
-template_name clone();
-template_start
   extern virtual function uvm_object clone();
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.740
-template_name convert2string();
-template_start
   extern virtual function string convert2string();
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.741
-template_name do_copy   (uvm_object rhs);
-template_start
   extern virtual function void do_copy   (uvm_object rhs);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.742
-template_name do_pack (uvm_packer packer);
-template_start
   extern virtual function void do_pack (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.743
-template_name do_print (uvm_printer printer);
-template_start
   extern virtual function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.744
-template_name do_unpack (uvm_packer packer);
-template_start
   extern virtual function void do_unpack (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.745
-template_name get_access(uvm_reg_map map = null);
-template_start
   extern virtual function string get_access(uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.746
-template_name get_backdoor(bit inherited = 1);
-template_start
   extern function uvm_reg_backdoor get_backdoor(bit inherited = 1);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.747
-template_name get_block  ();
-template_start
   extern virtual function uvm_reg_block get_block  ();
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.748
-template_name get_coverage(uvm_reg_cvr_t is_on);
-template_start
   extern virtual function bit get_coverage(uvm_reg_cvr_t is_on);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.749
-template_name get_default_map ();
-template_start
   /*local*/ extern function uvm_reg_map get_default_map ();
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.750
-template_name get_frontdoor(uvm_reg_map map = null);
-template_start
   extern function uvm_reg_frontdoor get_frontdoor(uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.751
-template_name get_full_name();
-template_start
   extern virtual function string get_full_name();
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.752
-template_name get_hdl_path_kinds (ref string kinds[$]);
-template_start
   extern function void get_hdl_path_kinds (ref string kinds[$]);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.753
-template_name get_local_map   (uvm_reg_map map);
-template_start
   /*local*/ extern function uvm_reg_map get_local_map   (uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.754
-template_name get_maps (ref uvm_reg_map maps[$]);
-template_start
   extern virtual function void get_maps (ref uvm_reg_map maps[$]);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.755
-template_name get_n_maps ();
-template_start
   extern virtual function int get_n_maps ();
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.756
-template_name get_parent ();
-template_start
   extern virtual function uvm_reg_block get_parent ();
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.757
-template_name get_rights (uvm_reg_map map = null);
-template_start
   extern virtual function string get_rights (uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.758
-template_name get_vfield_by_name(string name);
-template_start
   extern virtual function uvm_vreg_field  get_vfield_by_name(string name);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.759
-template_name get_virtual_fields(ref uvm_vreg_field fields[$]);
-template_start
   extern virtual function void get_virtual_fields(ref uvm_vreg_field fields[$]);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.760
-template_name get_virtual_registers(ref uvm_vreg regs[$]);
-template_start
   extern virtual function void get_virtual_registers(ref uvm_vreg regs[$]);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.761
-template_name get_vreg_by_name(string name);
-template_start
   extern virtual function uvm_vreg get_vreg_by_name(string name);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.762
-template_name has_coverage(uvm_reg_cvr_t models);
-template_start
   extern virtual function bit has_coverage(uvm_reg_cvr_t models);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.763
-template_name has_hdl_path (string kind = "");
-template_start
   extern function bit  has_hdl_path (string kind = "");
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.764
-template_name is_in_map (uvm_reg_map map);
-template_start
   extern function bit is_in_map (uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.765
-template_name set_coverage(uvm_reg_cvr_t is_on);
-template_start
   extern virtual function uvm_reg_cvr_t set_coverage(uvm_reg_cvr_t is_on);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.function.766
-template_name set_parent(uvm_reg_block parent);
-template_start
   /*local*/ extern virtual function void set_parent(uvm_reg_block parent);
-template_end
-template_context 06_uvm_api.05_reg.01_uvm_mem_mam.function.767
-template_name convert2string();
-template_start
   extern function string convert2string();
-template_end
-template_context 06_uvm_api.05_reg.01_uvm_mem_mam.function.768
-template_name for_each(bit reset = 0);
-template_start
   extern function uvm_mem_region for_each(bit reset = 0);
-template_end
-template_context 06_uvm_api.05_reg.01_uvm_mem_mam.function.769
-template_name get_memory();
-template_start
   extern function uvm_mem get_memory();
-template_end
-template_context 06_uvm_api.05_reg.01_uvm_mem_mam.function.770
-template_name reconfigure(uvm_mem_mam_cfg cfg = null);
-template_start
   extern function uvm_mem_mam_cfg reconfigure(uvm_mem_mam_cfg cfg = null);
-template_end
-template_context 06_uvm_api.05_reg.01_uvm_mem_mam.function.771
-template_name release_all_regions();
-template_start
   extern function void release_all_regions();
-template_end
-template_context 06_uvm_api.05_reg.01_uvm_mem_mam.function.772
-template_name release_region(uvm_mem_region region);
-template_start
   extern function void release_region(uvm_mem_region region);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.773
-template_name Xget_fields_accessX(uvm_reg_map map);
-template_start
   /*local*/ extern function string Xget_fields_accessX(uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.774
-template_name Xis_locked_by_fieldX();
-template_start
   /*local*/ extern function bit Xis_locked_by_fieldX();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.775
-template_name Xset_busyX(bit busy);
-template_start
   /*local*/ extern function void Xset_busyX(bit busy);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.776
-template_name add_coverage(uvm_reg_cvr_t models);
-template_start
   extern virtual protected function void add_coverage(uvm_reg_cvr_t models);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.777
-template_name add_field  (uvm_reg_field field);
-template_start
   /*local*/ extern virtual function void add_field  (uvm_reg_field field);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.778
-template_name add_map    (uvm_reg_map map);
-template_start
   /*local*/ extern virtual function void add_map    (uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.779
-template_name backdoor_read_func(uvm_reg_item rw);
-template_start
   extern virtual function uvm_status_e backdoor_read_func(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.780
-template_name build_coverage(uvm_reg_cvr_t models);
-template_start
   extern protected function uvm_reg_cvr_t build_coverage(uvm_reg_cvr_t models);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.781
-template_name clear_hdl_path (string kind = "RTL");
-template_start
   extern function void clear_hdl_path (string kind = "RTL");
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.782
-template_name clone      ();
-template_start
   extern virtual function uvm_object      clone      ();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.783
-template_name convert2string();
-template_start
   extern virtual function string          convert2string();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.784
-template_name do_copy    (uvm_object rhs);
-template_start
   extern virtual function void            do_copy    (uvm_object rhs);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.785
-template_name do_pack    (uvm_packer packer);
-template_start
   extern virtual function void            do_pack    (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.786
-template_name do_print (uvm_printer printer);
-template_start
   extern virtual function void            do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.787
-template_name do_unpack  (uvm_packer packer);
-template_start
   extern virtual function void            do_unpack  (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.788
-template_name get_address (uvm_reg_map map = null);
-template_start
   extern virtual function uvm_reg_addr_t get_address (uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.789
-template_name get_backdoor(bit inherited = 1);
-template_start
   extern function uvm_reg_backdoor get_backdoor(bit inherited = 1);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.790
-template_name get_block  ();
-template_start
   extern virtual function uvm_reg_block get_block  ();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.791
-template_name get_coverage(uvm_reg_cvr_t is_on);
-template_start
   extern virtual function bit get_coverage(uvm_reg_cvr_t is_on);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.792
-template_name get_default_map ();
-template_start
   /*local*/ extern virtual function uvm_reg_map get_default_map ();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.793
-template_name get_field_by_name(string name);
-template_start
   extern virtual function uvm_reg_field get_field_by_name(string name);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.794
-template_name get_fields (ref uvm_reg_field fields[$]);
-template_start
   extern virtual function void get_fields (ref uvm_reg_field fields[$]);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.795
-template_name get_frontdoor(uvm_reg_map map = null);
-template_start
   extern function uvm_reg_frontdoor get_frontdoor(uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.796
-template_name get_full_name();
-template_start
   extern virtual function string get_full_name();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.797
-template_name get_hdl_path_kinds (ref string kinds[$]);
-template_start
   extern function void get_hdl_path_kinds (ref string kinds[$]);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.798
-template_name get_local_map   (uvm_reg_map map);
-template_start
   /*local*/ extern virtual function uvm_reg_map get_local_map   (uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.799
-template_name get_maps (ref uvm_reg_map maps[$]);
-template_start
   extern virtual function void get_maps (ref uvm_reg_map maps[$]);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.800
-template_name get_n_maps ();
-template_start
   extern virtual function int get_n_maps ();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.801
-template_name get_offset (uvm_reg_map map = null);
-template_start
   extern virtual function uvm_reg_addr_t get_offset (uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.802
-template_name get_parent ();
-template_start
   extern virtual function uvm_reg_block get_parent ();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.803
-template_name get_regfile ();
-template_start
   extern virtual function uvm_reg_file get_regfile ();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.804
-template_name get_rights (uvm_reg_map map = null);
-template_start
   extern virtual function string get_rights (uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.805
-template_name has_coverage(uvm_reg_cvr_t models);
-template_start
   extern virtual function bit has_coverage(uvm_reg_cvr_t models);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.806
-template_name has_hdl_path (string kind = "");
-template_start
   extern function bit has_hdl_path (string kind = "");
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.807
-template_name is_busy();
-template_start
   extern function bit is_busy();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.808
-template_name is_in_map (uvm_reg_map map);
-template_start
   extern function bit is_in_map (uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.809
-template_name needs_update();
-template_start
   extern virtual function bit needs_update();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.810
-template_name reset(string kind = "HARD");
-template_start
   extern virtual function void reset(string kind = "HARD");
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.811
-template_name sample_values();
-template_start
   virtual function void sample_values();
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.812
-template_name set_coverage(uvm_reg_cvr_t is_on);
-template_start
   extern virtual function uvm_reg_cvr_t set_coverage(uvm_reg_cvr_t is_on);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.function.813
-template_name unregister(uvm_reg_map map);
-template_start
	virtual function void unregister(uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.03_uvm_reg_adapter.function.814
-template_name get_item();
-template_start
  virtual function uvm_reg_item get_item();
-template_end
-template_context 06_uvm_api.05_reg.03_uvm_reg_adapter.function.815
-template_name m_set_item(uvm_reg_item item);
-template_start
  virtual function void m_set_item(uvm_reg_item item);
-template_end
-template_context 06_uvm_api.05_reg.03_uvm_reg_adapter.function.816
-template_name name="");
-template_start
  function new(string name="");
-template_end
-template_context 06_uvm_api.05_reg.03_uvm_reg_adapter.function.817
-template_name reg2bus(const ref uvm_reg_bus_op rw);
-template_start
  pure virtual function uvm_sequence_item reg2bus(const ref uvm_reg_bus_op rw);
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.function.818
-template_name has_update_threads();
-template_start
   /*local*/ extern function bit has_update_threads();
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.function.819
-template_name is_auto_updated(uvm_reg_field field);
-template_start
   extern virtual function bit is_auto_updated(uvm_reg_field field);
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.function.820
-template_name kill_update_thread(uvm_object element);
-template_start
   /*local*/ extern function void kill_update_thread(uvm_object element);
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.function.821
-template_name name = "");
-template_start
   function new(string name = "");
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.function.822
-template_name read_func(uvm_reg_item rw);
-template_start
   extern virtual function void read_func(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.function.823
-template_name start_update_thread(uvm_object element);
-template_start
   /*local*/ extern function void start_update_thread(uvm_object element);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.824
-template_name Xinit_address_mapsX();
-template_start
   extern local function void Xinit_address_mapsX();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.825
-template_name add_block (uvm_reg_block blk);
-template_start
   /*local*/ extern function void add_block (uvm_reg_block blk);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.826
-template_name add_coverage(uvm_reg_cvr_t models);
-template_start
   extern virtual protected function void add_coverage(uvm_reg_cvr_t models);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.827
-template_name add_hdl_path (string path, string kind = "RTL");
-template_start
   extern function void add_hdl_path (string path, string kind = "RTL");
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.828
-template_name add_map   (uvm_reg_map map);
-template_start
   /*local*/ extern function void add_map   (uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.829
-template_name add_mem   (uvm_mem  mem);
-template_start
   /*local*/ extern function void add_mem   (uvm_mem  mem);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.830
-template_name add_reg   (uvm_reg  rg);
-template_start
   /*local*/ extern function void add_reg   (uvm_reg  rg);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.831
-template_name add_vreg  (uvm_vreg vreg);
-template_start
   /*local*/ extern function void add_vreg  (uvm_vreg vreg);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.832
-template_name build_coverage(uvm_reg_cvr_t models);
-template_start
   extern protected function uvm_reg_cvr_t build_coverage(uvm_reg_cvr_t models);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.833
-template_name check_data_width(int unsigned width);
-template_start
   extern protected static function bit check_data_width(int unsigned width);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.834
-template_name clear_hdl_path (string kind = "RTL");
-template_start
   extern function void clear_hdl_path (string kind = "RTL");
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.835
-template_name clone();
-template_start
   extern virtual function uvm_object clone();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.836
-template_name convert2string ();
-template_start
   extern virtual function string convert2string ();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.837
-template_name do_copy       (uvm_object rhs);
-template_start
   extern virtual function void   do_copy       (uvm_object rhs);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.838
-template_name do_pack       (uvm_packer packer);
-template_start
   extern virtual function void   do_pack       (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.839
-template_name do_print      (uvm_printer printer);
-template_start
   extern virtual function void   do_print      (uvm_printer printer);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.840
-template_name do_unpack     (uvm_packer packer);
-template_start
   extern virtual function void   do_unpack     (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.841
-template_name get_backdoor(bit inherited = 1);
-template_start
   extern function uvm_reg_backdoor get_backdoor(bit inherited = 1);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.842
-template_name get_block_by_name (string name);
-template_start
   extern virtual function uvm_reg_block get_block_by_name (string name);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.843
-template_name get_coverage(uvm_reg_cvr_t is_on = UVM_CVR_ALL);
-template_start
   extern virtual function bit get_coverage(uvm_reg_cvr_t is_on = UVM_CVR_ALL);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.844
-template_name get_default_door();
-template_start
   extern virtual function uvm_door_e get_default_door();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.845
-template_name get_default_hdl_path ();
-template_start
   extern function string get_default_hdl_path ();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.846
-template_name get_default_map ();
-template_start
   extern function uvm_reg_map get_default_map ();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.847
-template_name get_default_path();
-template_start
   extern virtual function uvm_path_e get_default_path();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.848
-template_name get_field_by_name (string name);
-template_start
   extern virtual function uvm_reg_field get_field_by_name (string name);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.849
-template_name get_full_name();
-template_start
   extern virtual function string get_full_name();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.850
-template_name get_hdl_path (ref string paths[$], input string kind = "");
-template_start
   extern function void get_hdl_path (ref string paths[$], input string kind = "");
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.851
-template_name get_map_by_name (string name);
-template_start
   extern virtual function uvm_reg_map get_map_by_name (string name);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.852
-template_name get_maps (ref uvm_reg_map maps[$]);
-template_start
   extern virtual function void get_maps (ref uvm_reg_map maps[$]);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.853
-template_name get_mem_by_name (string name);
-template_start
   extern virtual function uvm_mem get_mem_by_name (string name);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.854
-template_name get_parent();
-template_start
   extern virtual function uvm_reg_block get_parent();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.855
-template_name get_reg_by_name (string name);
-template_start
   extern virtual function uvm_reg get_reg_by_name (string name);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.856
-template_name get_root_blocks(ref uvm_reg_block blks[$]);
-template_start
   extern static  function void get_root_blocks(ref uvm_reg_block blks[$]);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.857
-template_name get_vfield_by_name (string name);
-template_start
   extern virtual function uvm_vreg_field get_vfield_by_name (string name);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.858
-template_name get_vreg_by_name (string name);
-template_start
   extern virtual function uvm_vreg get_vreg_by_name (string name);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.859
-template_name has_coverage(uvm_reg_cvr_t models);
-template_start
   extern virtual function bit has_coverage(uvm_reg_cvr_t models);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.860
-template_name has_hdl_path (string kind = "");
-template_start
   extern function bit has_hdl_path (string kind = "");
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.861
-template_name is_hdl_path_root (string kind = "");
-template_start
   extern function bit is_hdl_path_root (string kind = "");
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.862
-template_name is_locked();
-template_start
   extern function bit is_locked();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.863
-template_name lock_model();
-template_start
   extern virtual function void lock_model();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.864
-template_name name="", int has_coverage=UVM_NO_COVERAGE);
-template_start
   extern function new(string name="", int has_coverage=UVM_NO_COVERAGE);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.865
-template_name needs_update();
-template_start
   extern virtual function bit needs_update();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.866
-template_name reset(string kind = "HARD");
-template_start
   extern virtual function void reset(string kind = "HARD");
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.867
-template_name sample_values();
-template_start
   extern virtual function void sample_values();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.868
-template_name set_coverage(uvm_reg_cvr_t is_on);
-template_start
   extern virtual function uvm_reg_cvr_t set_coverage(uvm_reg_cvr_t is_on);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.869
-template_name set_default_door(uvm_door_e door);
-template_start
   extern virtual function void set_default_door(uvm_door_e door);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.870
-template_name set_default_hdl_path (string kind);
-template_start
   extern function void   set_default_hdl_path (string kind);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.871
-template_name set_default_map (uvm_reg_map map);
-template_start
   extern function void set_default_map (uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.872
-template_name set_hdl_path_root (string path, string kind = "RTL");
-template_start
   extern function void set_hdl_path_root (string path, string kind = "RTL");
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.873
-template_name set_lock(bit v);
-template_start
   virtual function void set_lock(bit v);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.874
-template_name set_parent(uvm_reg_block parent);
-template_start
   extern virtual function void set_parent(uvm_reg_block parent);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.875
-template_name unlock_model();
-template_start
   virtual function void unlock_model();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.function.876
-template_name unregister(uvm_reg_map m);
-template_start
   virtual function void unregister(uvm_reg_map m);
-template_end
-template_context 06_uvm_api.05_reg.06_uvm_reg_cbs.function.877
-template_name decode(ref uvm_reg_data_t data[]);
-template_start
   virtual function void decode(ref uvm_reg_data_t data[]);
-template_end
-template_context 06_uvm_api.05_reg.06_uvm_reg_cbs.function.878
-template_name encode(ref uvm_reg_data_t data[]);
-template_start
   virtual function void encode(ref uvm_reg_data_t data[]);
-template_end
-template_context 06_uvm_api.05_reg.06_uvm_reg_cbs.function.879
-template_name name = "uvm_reg_cbs");
-template_start
   function new(string name = "uvm_reg_cbs");
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.880
-template_name XupdateX();
-template_start
   extern virtual function uvm_reg_data_t XupdateX();
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.881
-template_name clone();
-template_start
   extern virtual function uvm_object clone();
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.882
-template_name define_access(string name);
-template_start
   extern static function bit define_access(string name);
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.883
-template_name do_copy   (uvm_object rhs);
-template_start
   extern virtual function void do_copy   (uvm_object rhs);
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.884
-template_name do_pack (uvm_packer packer);
-template_start
   extern virtual function void do_pack (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.885
-template_name do_print (uvm_printer printer);
-template_start
   extern virtual function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.886
-template_name do_unpack (uvm_packer packer);
-template_start
   extern virtual function void do_unpack (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.887
-template_name get_access(uvm_reg_map map = null);
-template_start
   extern virtual function string get_access(uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.888
-template_name get_compare();
-template_start
   extern function uvm_check_e get_compare();
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.889
-template_name get_full_name();
-template_start
   extern virtual function string get_full_name();
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.890
-template_name get_parent();
-template_start
   extern virtual function uvm_reg get_parent();
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.891
-template_name get_register();
-template_start
   extern virtual function uvm_reg get_register();
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.892
-template_name get_reset(string kind = "HARD");
-template_start
   extern virtual function uvm_reg_data_t get_reset(string kind = "HARD");
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.893
-template_name is_known_access(uvm_reg_map map = null);
-template_start
   extern virtual function bit is_known_access(uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.894
-template_name is_volatile();
-template_start
   extern virtual function bit is_volatile();
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.895
-template_name m_predefine_policies();
-template_start
   extern local static function bit m_predefine_policies();
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.896
-template_name name = "uvm_reg_field");
-template_start
   extern function new(string name = "uvm_reg_field");
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.897
-template_name needs_update();
-template_start
   extern virtual function bit needs_update();
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.898
-template_name post_randomize();
-template_start
   extern function void post_randomize();
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.899
-template_name pre_randomize();
-template_start
   extern function void pre_randomize();
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.900
-template_name reset(string kind = "HARD");
-template_start
   extern virtual function void reset(string kind = "HARD");
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.901
-template_name set_access(string mode);
-template_start
   extern virtual function string set_access(string mode);
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.902
-template_name set_compare(uvm_check_e check=UVM_CHECK);
-template_start
   extern function void set_compare(uvm_check_e check=UVM_CHECK);
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.function.903
-template_name set_volatility(bit volatile);
-template_start
   extern virtual function void set_volatility(bit volatile);
-template_end
-template_context 06_uvm_api.05_reg.08_uvm_reg_fifo.function.904
-template_name build();
-template_start
    virtual function void build();
-template_end
-template_context 06_uvm_api.05_reg.08_uvm_reg_fifo.function.905
-template_name get(string fname="", int lineno=0);
-template_start
    virtual function uvm_reg_data_t get(string fname="", int lineno=0);
-template_end
-template_context 06_uvm_api.05_reg.08_uvm_reg_fifo.function.906
-template_name post_randomize();
-template_start
    function void post_randomize();
-template_end
-template_context 06_uvm_api.05_reg.08_uvm_reg_fifo.function.907
-template_name set_compare(uvm_check_e check=UVM_CHECK);
-template_start
    function void set_compare(uvm_check_e check=UVM_CHECK);
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.908
-template_name (string name="");
-template_start
   extern function                  new        (string name="");
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.909
-template_name add_hdl_path      (string path, string kind = "RTL");
-template_start
   extern function void add_hdl_path      (string path, string kind = "RTL");
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.910
-template_name clear_hdl_path    (string kind = "RTL");
-template_start
   extern function void clear_hdl_path    (string kind = "RTL");
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.911
-template_name clone      ();
-template_start
   extern virtual function uvm_object    clone      ();
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.912
-template_name convert2string();
-template_start
   extern virtual function string        convert2string();
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.913
-template_name do_copy    (uvm_object rhs);
-template_start
   extern virtual function void          do_copy    (uvm_object rhs);
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.914
-template_name do_pack    (uvm_packer packer);
-template_start
   extern virtual function void          do_pack    (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.915
-template_name do_print (uvm_printer printer);
-template_start
   extern virtual function void          do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.916
-template_name do_unpack  (uvm_packer packer);
-template_start
   extern virtual function void          do_unpack  (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.917
-template_name get_block  ();
-template_start
   extern virtual function uvm_reg_block get_block  ();
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.918
-template_name get_default_hdl_path ();
-template_start
   extern function string get_default_hdl_path ();
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.919
-template_name get_full_name();
-template_start
   extern virtual function string        get_full_name();
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.920
-template_name get_hdl_path      (ref string paths[$], input string kind = "");
-template_start
   extern function void get_hdl_path      (ref string paths[$], input string kind = "");
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.921
-template_name get_parent ();
-template_start
   extern virtual function uvm_reg_block get_parent ();
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.922
-template_name get_regfile     ();
-template_start
   extern virtual function uvm_reg_file  get_regfile     ();
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.923
-template_name has_hdl_path      (string kind = "");
-template_start
   extern function bit  has_hdl_path      (string kind = "");
-template_end
-template_context 06_uvm_api.05_reg.09_uvm_reg_file.function.924
-template_name set_default_hdl_path (string kind);
-template_start
   extern function void   set_default_hdl_path (string kind);
-template_end
-template_context 06_uvm_api.05_reg.10_uvm_reg_indirect.function.925
-template_name add_field  (uvm_reg_field field);
-template_start
   virtual function void add_field  (uvm_reg_field field);
-template_end
-template_context 06_uvm_api.05_reg.10_uvm_reg_indirect.function.926
-template_name add_frontdoors(uvm_reg_map map);
-template_start
   local function void add_frontdoors(uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.10_uvm_reg_indirect.function.927
-template_name add_map(uvm_reg_map map);
-template_start
   /*local*/ virtual function void add_map(uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.10_uvm_reg_indirect.function.928
-template_name build();
-template_start
   virtual function void build();
-template_end
-template_context 06_uvm_api.05_reg.10_uvm_reg_indirect.function.929
-template_name get_local_map(uvm_reg_map map);
-template_start
   virtual function uvm_reg_map get_local_map(uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.10_uvm_reg_indirect.function.930
-template_name needs_update();
-template_start
   virtual function bit needs_update();
-template_end
-template_context 06_uvm_api.05_reg.11_uvm_reg_item.function.931
-template_name convert2string();
-template_start
  virtual function string convert2string();
-template_end
-template_context 06_uvm_api.05_reg.11_uvm_reg_item.function.932
-template_name do_copy(uvm_object rhs);
-template_start
  virtual function void do_copy(uvm_object rhs);
-template_end
-template_context 06_uvm_api.05_reg.11_uvm_reg_item.function.933
-template_name name="");
-template_start
  function new(string name="");
-template_end
-template_context 06_uvm_api.05_reg.12_uvm_reg_model.function.934
-template_name add_slice(uvm_hdl_path_slice slice);
-template_start
   function void add_slice(uvm_hdl_path_slice slice);
-template_end
-template_context 06_uvm_api.05_reg.12_uvm_reg_model.function.935
-template_name set(uvm_hdl_path_slice t[]);
-template_start
   function void set(uvm_hdl_path_slice t[]);
-template_end
-template_context 06_uvm_api.05_reg.13_uvm_reg_sequence.function.936
-template_name (string name="uvm_reg_sequence_inst");
-template_start
  function new (string name="uvm_reg_sequence_inst");
-template_end
-template_context 06_uvm_api.05_reg.13_uvm_reg_sequence.function.937
-template_name put_response(uvm_sequence_item response_item);
-template_start
  virtual function void put_response(uvm_sequence_item response_item);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.938
-template_name Xlock_modelX();
-template_start
   /*local*/ extern function void Xlock_modelX();
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.939
-template_name add_field(uvm_vreg_field field);
-template_start
   /*local*/ extern function void add_field(uvm_vreg_field field);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.940
-template_name clone();
-template_start
   extern virtual function uvm_object clone();
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.941
-template_name do_copy   (uvm_object rhs);
-template_start
   extern virtual function void do_copy   (uvm_object rhs);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.942
-template_name do_pack (uvm_packer packer);
-template_start
   extern virtual function void do_pack (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.943
-template_name do_print (uvm_printer printer);
-template_start
   extern virtual function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.944
-template_name do_unpack (uvm_packer packer);
-template_start
   extern virtual function void do_unpack (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.945
-template_name get_access(uvm_reg_map map = null);
-template_start
   extern virtual function string get_access(uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.946
-template_name get_block();
-template_start
   extern virtual function uvm_reg_block get_block();
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.947
-template_name get_field_by_name(string name);
-template_start
   extern virtual function uvm_vreg_field get_field_by_name(string name);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.948
-template_name get_fields(ref uvm_vreg_field fields[$]);
-template_start
   extern virtual function void get_fields(ref uvm_vreg_field fields[$]);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.949
-template_name get_full_name();
-template_start
   extern virtual function string        get_full_name();
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.950
-template_name get_maps        (ref uvm_reg_map maps[$]);
-template_start
   extern virtual function void            get_maps        (ref uvm_reg_map maps[$]);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.951
-template_name get_memory();
-template_start
   extern virtual function uvm_mem get_memory();
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.952
-template_name get_n_maps      ();
-template_start
   extern virtual function int             get_n_maps      ();
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.953
-template_name get_offset_in_memory(longint unsigned idx);
-template_start
   extern virtual function uvm_reg_addr_t  get_offset_in_memory(longint unsigned idx);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.954
-template_name get_parent();
-template_start
   extern virtual function uvm_reg_block get_parent();
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.955
-template_name get_region();
-template_start
   extern virtual function uvm_mem_region get_region();
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.956
-template_name get_rights(uvm_reg_map map = null);
-template_start
   extern virtual function string get_rights(uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.957
-template_name is_in_map       (uvm_reg_map map);
-template_start
   extern function         bit             is_in_map       (uvm_reg_map map);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.958
-template_name release_region();
-template_start
   extern virtual function void release_region();
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.959
-template_name reset(string kind = "HARD");
-template_start
   extern function void reset(string kind = "HARD");
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.function.960
-template_name set_parent(uvm_reg_block parent);
-template_start
   /*local*/ extern virtual function void set_parent(uvm_reg_block parent);
-template_end
-template_context 06_uvm_api.05_reg.15_uvm_vreg_field.function.961
-template_name clone();
-template_start
   extern virtual function uvm_object clone();
-template_end
-template_context 06_uvm_api.05_reg.15_uvm_vreg_field.function.962
-template_name do_copy   (uvm_object rhs);
-template_start
   extern virtual function void do_copy   (uvm_object rhs);
-template_end
-template_context 06_uvm_api.05_reg.15_uvm_vreg_field.function.963
-template_name do_pack (uvm_packer packer);
-template_start
   extern virtual function void do_pack (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.15_uvm_vreg_field.function.964
-template_name do_print (uvm_printer printer);
-template_start
   extern virtual function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.05_reg.15_uvm_vreg_field.function.965
-template_name do_unpack (uvm_packer packer);
-template_start
   extern virtual function void do_unpack (uvm_packer packer);
-template_end
-template_context 06_uvm_api.05_reg.15_uvm_vreg_field.function.966
-template_name get_access(uvm_reg_map map = null);
-template_start
   extern virtual function string get_access(uvm_reg_map map = null);
-template_end
-template_context 06_uvm_api.05_reg.15_uvm_vreg_field.function.967
-template_name get_full_name();
-template_start
   extern virtual function string        get_full_name();
-template_end
-template_context 06_uvm_api.05_reg.15_uvm_vreg_field.function.968
-template_name get_parent();
-template_start
   extern virtual function uvm_vreg get_parent();
-template_end
-template_context 06_uvm_api.05_reg.15_uvm_vreg_field.function.969
-template_name get_register();
-template_start
   extern virtual function uvm_vreg get_register();
-template_end
-template_context 06_uvm_api.05_reg.15_uvm_vreg_field.function.970
-template_name name = "uvm_vreg_field");
-template_start
   extern function new(string name = "uvm_vreg_field");
-template_end
-template_context 06_uvm_api.06_seq.00_uvm_push_sequencer.function.971
-template_name (string name, uvm_component parent=null);
-template_start
  function new (string name, uvm_component parent=null);
-template_end
-template_context 06_uvm_api.06_seq.00_uvm_push_sequencer.function.972
-template_name m_find_number_driver_connections();
-template_start
  protected virtual function int  m_find_number_driver_connections();
-template_end
-template_context 06_uvm_api.06_seq.01_uvm_sequence.function.973
-template_name (string name = "uvm_sequence");
-template_start
  function new (string name = "uvm_sequence");
-template_end
-template_context 06_uvm_api.06_seq.01_uvm_sequence.function.974
-template_name do_print (uvm_printer printer);
-template_start
  function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.06_seq.01_uvm_sequence.function.975
-template_name get_current_item();
-template_start
  function REQ get_current_item();
-template_end
-template_context 06_uvm_api.06_seq.01_uvm_sequence.function.976
-template_name put_response(uvm_sequence_item response_item);
-template_start
  virtual function void put_response(uvm_sequence_item response_item);
-template_end
-template_context 06_uvm_api.06_seq.01_uvm_sequence.function.977
-template_name send_request(uvm_sequence_item request, bit rerandomize = 0);
-template_start
  function void send_request(uvm_sequence_item request, bit rerandomize = 0);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.978
-template_name (string name = "uvm_sequence");
-template_start
  function new (string name = "uvm_sequence");
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.979
-template_name clean_exit_sequence();
-template_start
   function void clean_exit_sequence();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.980
-template_name clear_response_queue();
-template_start
  virtual function void clear_response_queue();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.981
-template_name do_kill();
-template_start
  virtual function void do_kill();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.982
-template_name get_automatic_phase_objection();
-template_start
  function bit get_automatic_phase_objection();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.983
-template_name get_priority();
-template_start
  function int get_priority();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.984
-template_name get_randomize_enabled();
-template_start
  virtual  function bit get_randomize_enabled();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.985
-template_name get_response_queue_depth();
-template_start
  function int get_response_queue_depth();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.986
-template_name get_response_queue_error_report_disabled();
-template_start
  function bit get_response_queue_error_report_disabled();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.987
-template_name get_response_queue_error_report_enabled();
-template_start
  function bit get_response_queue_error_report_enabled();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.988
-template_name get_sequence_state();
-template_start
  function uvm_sequence_state_enum get_sequence_state();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.989
-template_name get_starting_phase();
-template_start
  function uvm_phase get_starting_phase();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.990
-template_name get_tr_handle();
-template_start
  function int get_tr_handle();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.991
-template_name get_use_response_handler();
-template_start
  function bit get_use_response_handler();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.992
-template_name has_lock();
-template_start
  function bit has_lock();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.993
-template_name is_blocked();
-template_start
  function bit is_blocked();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.994
-template_name is_item();
-template_start
  virtual function bit is_item();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.995
-template_name is_relevant();
-template_start
  virtual function bit is_relevant();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.996
-template_name kill();
-template_start
  function void kill();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.997
-template_name m_get_sqr_sequence_id(int sequencer_id, bit update_sequence_id);
-template_start
  function int m_get_sqr_sequence_id(int sequencer_id, bit update_sequence_id);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.998
-template_name m_init_phase_daps(bit create);
-template_start
  function void m_init_phase_daps(bit create);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.999
-template_name m_kill();
-template_start
  function void m_kill();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1000
-template_name m_set_sqr_sequence_id(int sequencer_id, int sequence_id);
-template_start
  function void m_set_sqr_sequence_id(int sequencer_id, int sequence_id);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1001
-template_name mid_do(uvm_sequence_item this_item);
-template_start
  virtual function void mid_do(uvm_sequence_item this_item);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1002
-template_name post_do(uvm_sequence_item this_item);
-template_start
  virtual function void post_do(uvm_sequence_item this_item);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1003
-template_name put_base_response(input uvm_sequence_item response);
-template_start
  virtual function void put_base_response(input uvm_sequence_item response);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1004
-template_name put_response (uvm_sequence_item response_item);
-template_start
  virtual function void put_response (uvm_sequence_item response_item);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1005
-template_name response_handler(uvm_sequence_item response);
-template_start
  virtual function void response_handler(uvm_sequence_item response);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1006
-template_name send_request(uvm_sequence_item request, bit rerandomize = 0);
-template_start
  virtual function void send_request(uvm_sequence_item request, bit rerandomize = 0);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1007
-template_name set_automatic_phase_objection(bit value);
-template_start
  function void set_automatic_phase_objection(bit value);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1008
-template_name set_priority (int value);
-template_start
  function void set_priority (int value);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1009
-template_name set_randomize_enabled(bit enable);
-template_start
  virtual  function void set_randomize_enabled(bit enable);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1010
-template_name set_response_queue_depth(int value);
-template_start
  function void set_response_queue_depth(int value);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1011
-template_name set_response_queue_error_report_disabled(bit value);
-template_start
  function void set_response_queue_error_report_disabled(bit value);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1012
-template_name set_response_queue_error_report_enabled(bit value);
-template_start
  function void set_response_queue_error_report_enabled(bit value);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1013
-template_name set_starting_phase(uvm_phase phase);
-template_start
  function void set_starting_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1014
-template_name ungrab(uvm_sequencer_base sequencer = null);
-template_start
  function void  ungrab(uvm_sequencer_base sequencer = null);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1015
-template_name unlock(uvm_sequencer_base sequencer = null);
-template_start
  function void  unlock(uvm_sequencer_base sequencer = null);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.function.1016
-template_name use_response_handler(bit enable);
-template_start
  function void use_response_handler(bit enable);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1017
-template_name (string name = "uvm_sequence_item");
-template_start
  function new (string name = "uvm_sequence_item");
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1018
-template_name do_print (uvm_printer printer);
-template_start
  function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1019
-template_name get_depth();
-template_start
  function int get_depth();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1020
-template_name get_full_name();
-template_start
  function string get_full_name();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1021
-template_name get_parent_sequence();
-template_start
  function uvm_sequence_base get_parent_sequence();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1022
-template_name get_root_sequence();
-template_start
  function uvm_sequence_base get_root_sequence();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1023
-template_name get_root_sequence_name();
-template_start
  function string get_root_sequence_name();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1024
-template_name get_sequence_id();
-template_start
  function int get_sequence_id();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1025
-template_name get_sequence_path();
-template_start
  function string get_sequence_path();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1026
-template_name get_sequencer();
-template_start
  function uvm_sequencer_base get_sequencer();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1027
-template_name get_type_name();
-template_start
  function string get_type_name();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1028
-template_name get_use_sequence_info();
-template_start
  function bit get_use_sequence_info();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1029
-template_name is_item();
-template_start
  virtual function bit is_item();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1030
-template_name m_set_p_sequencer();
-template_start
  virtual function void m_set_p_sequencer();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1031
-template_name mid_do(uvm_sequence_item this_item);
-template_start
  virtual function void mid_do(uvm_sequence_item this_item);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1032
-template_name post_do(uvm_sequence_item this_item);
-template_start
  virtual function void post_do(uvm_sequence_item this_item);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1033
-template_name send_request(uvm_sequence_item request, bit rerandomize = 0);
-template_start
  virtual function void send_request(uvm_sequence_item request, bit rerandomize = 0);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1034
-template_name set_depth(int value);
-template_start
  function void set_depth(int value);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1035
-template_name set_id_info(uvm_sequence_item item);
-template_start
  function void set_id_info(uvm_sequence_item item);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1036
-template_name set_parent_sequence(uvm_sequence_base parent);
-template_start
  function void set_parent_sequence(uvm_sequence_base parent);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1037
-template_name set_sequence_id(int id);
-template_start
  function void set_sequence_id(int id);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1038
-template_name set_sequencer(uvm_sequencer_base sequencer);
-template_start
  virtual function void set_sequencer(uvm_sequencer_base sequencer);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1039
-template_name set_use_sequence_info(bit value);
-template_start
  function void set_use_sequence_info(bit value);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1040
-template_name uvm_get_report_object();
-template_start
  virtual function uvm_report_object uvm_get_report_object();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.function.1041
-template_name uvm_process_report_message (uvm_report_message report_message);
-template_start
  virtual function void uvm_process_report_message (uvm_report_message report_message);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1042
-template_name add_sequence(uvm_object_wrapper seq_type);
-template_start
   extern function void add_sequence(uvm_object_wrapper seq_type);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1043
-template_name add_sequences(uvm_object_wrapper seq_types[$]);
-template_start
   extern virtual function void add_sequences(uvm_object_wrapper seq_types[$]);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1044
-template_name add_typewide_sequence(uvm_object_wrapper seq_type);
-template_start
   extern static function void add_typewide_sequence(uvm_object_wrapper seq_type);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1045
-template_name add_typewide_sequences(uvm_object_wrapper seq_types[$]);
-template_start
   extern static function void add_typewide_sequences(uvm_object_wrapper seq_types[$]);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1046
-template_name do_print(uvm_printer printer);
-template_start
   extern virtual  function void do_print(uvm_printer printer);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1047
-template_name get_sequence(int unsigned idx);
-template_start
   extern virtual function uvm_object_wrapper get_sequence(int unsigned idx);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1048
-template_name get_sequences(ref uvm_object_wrapper seq_types[$]);
-template_start
   extern virtual function void get_sequences(ref uvm_object_wrapper seq_types[$]);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1049
-template_name init_sequence_library();
-template_start
   extern function void init_sequence_library();
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1050
-template_name m_add_typewide_sequence(uvm_object_wrapper seq_type);
-template_start
   extern static   function bit  m_add_typewide_sequence(uvm_object_wrapper seq_type);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1051
-template_name m_check(uvm_object_wrapper seq_type, this_type lib);
-template_start
   extern static   function bit  m_check(uvm_object_wrapper seq_type, this_type lib);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1052
-template_name m_dyn_check(uvm_object_wrapper seq_type);
-template_start
   extern          function bit  m_dyn_check(uvm_object_wrapper seq_type);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1053
-template_name m_get_config();
-template_start
   extern          function void m_get_config();
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1054
-template_name m_static_check(uvm_object_wrapper seq_type);
-template_start
   extern static   function bit  m_static_check(uvm_object_wrapper seq_type);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1055
-template_name name="");
-template_start
   extern function new(string name="");
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1056
-template_name pre_randomize();
-template_start
   extern          function void pre_randomize();
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.function.1057
-template_name remove_sequence(uvm_object_wrapper seq_type);
-template_start
   extern virtual function void remove_sequence(uvm_object_wrapper seq_type);
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.function.1058
-template_name (string name, uvm_component parent=null);
-template_start
  extern function new (string name, uvm_component parent=null);
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.function.1059
-template_name get_type_name();
-template_start
  extern virtual function string get_type_name();
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.function.1060
-template_name item_done     (RSP item = null);
-template_start
  extern virtual function void item_done     (RSP item = null);
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.function.1061
-template_name item_done_get_trigger_data();
-template_start
  function RSP                 item_done_get_trigger_data();
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.function.1062
-template_name item_done_trigger(RSP item = null);
-template_start
  extern function void         item_done_trigger(RSP item = null);
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.function.1063
-template_name m_find_number_driver_connections();
-template_start
  extern protected virtual function int m_find_number_driver_connections();
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.function.1064
-template_name stop_sequences();
-template_start
  extern virtual function void stop_sequences();
-template_end
-template_context 06_uvm_api.06_seq.06_uvm_sequencer_analysis_fifo.function.1065
-template_name (string name, uvm_component parent = null);
-template_start
  function new (string name, uvm_component parent = null);
-template_end
-template_context 06_uvm_api.06_seq.06_uvm_sequencer_analysis_fifo.function.1066
-template_name write(input RSP t);
-template_start
  function void write(input RSP t);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1067
-template_name (string name, uvm_component parent);
-template_start
  extern function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1068
-template_name analysis_write(uvm_sequence_item t);
-template_start
  /* local */ extern virtual function void analysis_write(uvm_sequence_item t);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1069
-template_name build_phase(uvm_phase phase);
-template_start
  /* local */ extern virtual function void build_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1070
-template_name connect_phase(uvm_phase phase);
-template_start
  /* local */ extern virtual function void connect_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1071
-template_name do_print (uvm_printer printer);
-template_start
  /* local */ extern virtual function void do_print (uvm_printer printer);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1072
-template_name get_current_item();
-template_start
  function REQ get_current_item();
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1073
-template_name get_num_reqs_sent();
-template_start
  extern function int get_num_reqs_sent();
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1074
-template_name get_num_rsps_received();
-template_start
  extern function int get_num_rsps_received();
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1075
-template_name last_req(int unsigned n = 0);
-template_start
  function REQ last_req(int unsigned n = 0);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1076
-template_name last_rsp(int unsigned n = 0);
-template_start
  function RSP last_rsp(int unsigned n = 0);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1077
-template_name m_last_req_push_front(REQ item);
-template_start
  /* local */ extern function void m_last_req_push_front(REQ item);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1078
-template_name m_last_rsp_push_front(RSP item);
-template_start
  /* local */ extern function void m_last_rsp_push_front(RSP item);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1079
-template_name put_response (RSP t);
-template_start
  /* local */ extern function void put_response (RSP t);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1080
-template_name set_num_last_reqs(int unsigned max);
-template_start
  extern function void set_num_last_reqs(int unsigned max);
-template_end
-template_context 06_uvm_api.06_seq.07_uvm_sequencer_param_base.function.1081
-template_name set_num_last_rsps(int unsigned max);
-template_start
  extern function void set_num_last_rsps(int unsigned max);
-template_end
-template_context 06_uvm_api.07_sequences.00_uvm_mem_access_seq.function.1082
-template_name name="uam_mem_single_access_seq");
-template_start
   function new(string name="uam_mem_single_access_seq");
-template_end
-template_context 06_uvm_api.07_sequences.01_uvm_mem_walk_seq.function.1083
-template_name name="uvm_mem_walk_seq");
-template_start
   function new(string name="uvm_mem_walk_seq");
-template_end
-template_context 06_uvm_api.07_sequences.02_uvm_reg_access_seq.function.1084
-template_name name="uvm_reg_single_access_seq");
-template_start
   function new(string name="uvm_reg_single_access_seq");
-template_end
-template_context 06_uvm_api.07_sequences.03_uvm_reg_bit_bash_seq.function.1085
-template_name name="uvm_reg_single_bit_bash_seq");
-template_start
   function new(string name="uvm_reg_single_bit_bash_seq");
-template_end
-template_context 06_uvm_api.07_sequences.04_uvm_reg_hw_reset_seq.function.1086
-template_name name="uvm_reg_hw_reset_seq");
-template_start
   function new(string name="uvm_reg_hw_reset_seq");
-template_end
-template_context 06_uvm_api.07_sequences.05_uvm_reg_mem_built_in_seq.function.1087
-template_name name="uvm_reg_mem_built_in_seq");
-template_start
   function new(string name="uvm_reg_mem_built_in_seq");
-template_end
-template_context 06_uvm_api.07_sequences.06_uvm_reg_mem_hdl_paths_seq.function.1088
-template_name name="uvm_reg_mem_hdl_paths_seq");
-template_start
    function new(string name="uvm_reg_mem_hdl_paths_seq");
-template_end
-template_context 06_uvm_api.07_sequences.07_uvm_reg_mem_shared_access_seq.function.1089
-template_name name="uvm_reg_shared_access_seq");
-template_start
   function new(string name="uvm_reg_shared_access_seq");
-template_end
-template_context 06_uvm_api.08_tlm1.00_uvm_analysis_port.function.1090
-template_name (string name, uvm_component parent);
-template_start
  function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.08_tlm1.00_uvm_analysis_port.function.1091
-template_name get_type_name();
-template_start
  virtual function string get_type_name();
-template_end
-template_context 06_uvm_api.08_tlm1.00_uvm_analysis_port.function.1092
-template_name write (input T t);
-template_start
  function void write (input T t);
-template_end
-template_context 06_uvm_api.08_tlm1.01_uvm_sqr_ifs.function.1093
-template_name disable_auto_item_recording();
-template_start
  virtual function void disable_auto_item_recording();
-template_end
-template_context 06_uvm_api.08_tlm1.01_uvm_sqr_ifs.function.1094
-template_name has_do_available();
-template_start
  virtual function bit has_do_available();
-template_end
-template_context 06_uvm_api.08_tlm1.01_uvm_sqr_ifs.function.1095
-template_name is_auto_item_recording_enabled();
-template_start
  virtual function bit is_auto_item_recording_enabled();
-template_end
-template_context 06_uvm_api.08_tlm1.01_uvm_sqr_ifs.function.1096
-template_name item_done(input T2 t = null);
-template_start
  virtual function void item_done(input T2 t = null);
-template_end
-template_context 06_uvm_api.08_tlm1.01_uvm_sqr_ifs.function.1097
-template_name put_response(input T2 t);
-template_start
  virtual function void put_response(input T2 t);
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1098
-template_name can_get();
-template_start
  virtual function bit can_get();
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1099
-template_name can_peek();
-template_start
  virtual function bit can_peek();
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1100
-template_name can_put();
-template_start
  virtual function bit can_put();
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1101
-template_name flush();
-template_start
  virtual function void flush();
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1102
-template_name is_empty();
-template_start
  virtual function bit is_empty();
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1103
-template_name is_full();
-template_start
  virtual function bit is_full();
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1104
-template_name name, uvm_component parent = null, int size = 1);
-template_start
  function new(string name, uvm_component parent = null, int size = 1);
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1105
-template_name size();
-template_start
  virtual function int size();
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1106
-template_name try_get( output T t );
-template_start
  virtual function bit try_get( output T t );
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1107
-template_name try_peek( output T t );
-template_start
  virtual function bit try_peek( output T t );
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1108
-template_name try_put( input T t );
-template_start
  virtual function bit try_put( input T t );
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.function.1109
-template_name used();
-template_start
  virtual function int used();
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.function.1110
-template_name can_get();
-template_start
  virtual function bit can_get();
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.function.1111
-template_name can_peek();
-template_start
  virtual function bit can_peek();
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.function.1112
-template_name can_put();
-template_start
  virtual function bit can_put();
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.function.1113
-template_name nb_transport(input T1 req, output T2 rsp);
-template_start
  virtual function bit nb_transport(input T1 req, output T2 rsp);
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.function.1114
-template_name try_get( output T2 t );
-template_start
  virtual function bit try_get( output T2 t );
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.function.1115
-template_name try_peek( output T2 t );
-template_start
  virtual function bit try_peek( output T2 t );
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.function.1116
-template_name try_put( input T1 t );
-template_start
  virtual function bit try_put( input T1 t );
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.function.1117
-template_name write( input T1 t );
-template_start
  virtual function void write( input T1 t );
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.function.1118
-template_name (string name, IMP imp); \
-template_start
  function new (string name, IMP imp); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.function.1119
-template_name can_get(); \
-template_start
  function bit can_get(); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.function.1120
-template_name can_peek(); \
-template_start
  function bit can_peek(); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.function.1121
-template_name can_put(); \
-template_start
  function bit can_put(); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.function.1122
-template_name can_put(); \
-template_start
  function bit can_put(); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.function.1123
-template_name get_type_name(); \
-template_start
  virtual function string get_type_name(); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.function.1124
-template_name nb_transport (REQ req_arg, output RSP rsp_arg); \
-template_start
  function bit nb_transport (REQ req_arg, output RSP rsp_arg); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.function.1125
-template_name try_get (output TYPE arg); \
-template_start
  function bit try_get (output TYPE arg); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.function.1126
-template_name try_peek (output TYPE arg); \
-template_start
  function bit try_peek (output TYPE arg); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.function.1127
-template_name try_put (TYPE arg); \
-template_start
  function bit try_put (TYPE arg); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.function.1128
-template_name try_put(input TYPE arg); \
-template_start
  function bit try_put(input TYPE arg); \
-template_end
-template_context 06_uvm_api.08_tlm1.05_uvm_tlm_req_rsp.function.1129
-template_name connect_phase(uvm_phase phase);
-template_start
  virtual function void connect_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.08_tlm1.05_uvm_tlm_req_rsp.function.1130
-template_name create_aliased_exports();
-template_start
  function void create_aliased_exports();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1131
-template_name clear_extension(uvm_tlm_extension_base ext_handle);
-template_start
  function void clear_extension(uvm_tlm_extension_base ext_handle);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1132
-template_name clear_extensions();
-template_start
  function void clear_extensions();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1133
-template_name convert2string();
-template_start
  function string convert2string();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1134
-template_name do_compare(uvm_object rhs, uvm_comparer comparer);
-template_start
  function bit do_compare(uvm_object rhs, uvm_comparer comparer);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1135
-template_name do_copy(uvm_object rhs);
-template_start
  function void do_copy(uvm_object rhs);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1136
-template_name do_pack(uvm_packer packer);
-template_start
  function void do_pack(uvm_packer packer);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1137
-template_name do_print(uvm_printer printer);
-template_start
  function void do_print(uvm_printer printer);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1138
-template_name do_record(uvm_recorder recorder);
-template_start
  function void do_record(uvm_recorder recorder);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1139
-template_name do_unpack(uvm_packer packer);
-template_start
  function void do_unpack(uvm_packer packer);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1140
-template_name get_byte_enable(output byte unsigned p[]);
-template_start
  virtual function void get_byte_enable(output byte unsigned p[]);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1141
-template_name get_command();
-template_start
  virtual function uvm_tlm_command_e get_command();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1142
-template_name get_data (output byte unsigned p []);
-template_start
  virtual function void get_data (output byte unsigned p []);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1143
-template_name get_extension(uvm_tlm_extension_base ext_handle);
-template_start
  function uvm_tlm_extension_base get_extension(uvm_tlm_extension_base ext_handle);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1144
-template_name get_num_extensions();
-template_start
  function int get_num_extensions();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1145
-template_name get_response_status();
-template_start
  virtual function uvm_tlm_response_status_e get_response_status();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1146
-template_name get_response_string();
-template_start
  virtual function string get_response_string();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1147
-template_name is_dmi_allowed();
-template_start
 virtual function bit is_dmi_allowed();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1148
-template_name is_read();
-template_start
  virtual function bit is_read();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1149
-template_name is_response_error();
-template_start
  virtual function bit is_response_error();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1150
-template_name is_response_ok();
-template_start
  virtual function bit is_response_ok();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1151
-template_name is_write();
-template_start
  virtual function bit is_write();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1152
-template_name name="");
-template_start
  function new(string name="");
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1153
-template_name post_randomize();
-template_start
  function void post_randomize();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1154
-template_name pre_randomize();
-template_start
  function void pre_randomize();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1155
-template_name set_address(bit [63:0] addr);
-template_start
  virtual function void set_address(bit [63:0] addr);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1156
-template_name set_byte_enable(ref byte unsigned p[]);
-template_start
  virtual function void set_byte_enable(ref byte unsigned p[]);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1157
-template_name set_byte_enable_length(int unsigned length);
-template_start
 virtual function void set_byte_enable_length(int unsigned length);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1158
-template_name set_command(uvm_tlm_command_e command);
-template_start
  virtual function void set_command(uvm_tlm_command_e command);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1159
-template_name set_data(ref byte unsigned p []);
-template_start
  virtual function void set_data(ref byte unsigned p []);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1160
-template_name set_data_length(int unsigned length);
-template_start
   virtual function void set_data_length(int unsigned length);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1161
-template_name set_dmi_allowed(bit dmi);
-template_start
  virtual function void set_dmi_allowed(bit dmi);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1162
-template_name set_extension(uvm_tlm_extension_base ext);
-template_start
  function uvm_tlm_extension_base set_extension(uvm_tlm_extension_base ext);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1163
-template_name set_read();
-template_start
  virtual function void set_read();
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1164
-template_name set_response_status(uvm_tlm_response_status_e status);
-template_start
  virtual function void set_response_status(uvm_tlm_response_status_e status);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1165
-template_name set_streaming_width(int unsigned width);
-template_start
  virtual function void set_streaming_width(int unsigned width);
-template_end
-template_context 06_uvm_api.09_tlm2.00_uvm_tlm2_generic_payload.function.1166
-template_name set_write();
-template_start
  virtual function void set_write();
-template_end
-template_context 06_uvm_api.09_tlm2.01_uvm_tlm2_ifs.function.1167
-template_name nb_transport_bw(T t, ref P p, input uvm_tlm_time delay);
-template_start
  virtual function uvm_tlm_sync_e nb_transport_bw(T t, ref P p, input uvm_tlm_time delay);
-template_end
-template_context 06_uvm_api.09_tlm2.01_uvm_tlm2_ifs.function.1168
-template_name nb_transport_fw(T t, ref P p, input uvm_tlm_time delay);
-template_start
  virtual function uvm_tlm_sync_e nb_transport_fw(T t, ref P p, input uvm_tlm_time delay);
-template_end
-template_context 06_uvm_api.09_tlm2.02_uvm_tlm2_imps.function.1169
-template_name nb_transport_bw(T t, ref P p, input uvm_tlm_time delay);  \
-template_start
  function uvm_tlm_sync_e nb_transport_bw(T t, ref P p, input uvm_tlm_time delay);  \
-template_end
-template_context 06_uvm_api.09_tlm2.02_uvm_tlm2_imps.function.1170
-template_name nb_transport_fw(T t, ref P p, input uvm_tlm_time delay);  \
-template_start
  function uvm_tlm_sync_e nb_transport_fw(T t, ref P p, input uvm_tlm_time delay);  \
-template_end
-template_context 06_uvm_api.09_tlm2.03_uvm_tlm2_sockets.function.1171
-template_name connect(this_type provider);
-template_start
  function void connect(this_type provider);
-template_end
-template_context 06_uvm_api.09_tlm2.03_uvm_tlm2_sockets.function.1172
-template_name name, uvm_component parent);
-template_start
  function new(string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.09_tlm2.04_uvm_tlm2_sockets_base.function.1173
-template_name (string name, uvm_component parent);
-template_start
  function new (string name, uvm_component parent);
-template_end
-template_context 06_uvm_api.09_tlm2.05_uvm_tlm_time.function.1174
-template_name decr(real t, time scaled, real secs);
-template_start
   function void decr(real t, time scaled, real secs);
-template_end
-template_context 06_uvm_api.09_tlm2.05_uvm_tlm_time.function.1175
-template_name get_abstime(real secs);
-template_start
   function real get_abstime(real secs);
-template_end
-template_context 06_uvm_api.09_tlm2.05_uvm_tlm_time.function.1176
-template_name get_name();
-template_start
   function string get_name();
-template_end
-template_context 06_uvm_api.09_tlm2.05_uvm_tlm_time.function.1177
-template_name get_realtime(time scaled, real secs = 1.0e-9);
-template_start
   function real get_realtime(time scaled, real secs = 1.0e-9);
-template_end
-template_context 06_uvm_api.09_tlm2.05_uvm_tlm_time.function.1178
-template_name incr(real t, time scaled, real secs = 1.0e-9);
-template_start
   function void incr(real t, time scaled, real secs = 1.0e-9);
-template_end
-template_context 06_uvm_api.09_tlm2.05_uvm_tlm_time.function.1179
-template_name name = "uvm_tlm_time", real res = 0);
-template_start
   function new(string name = "uvm_tlm_time", real res = 0);
-template_end
-template_context 06_uvm_api.09_tlm2.05_uvm_tlm_time.function.1180
-template_name reset();
-template_start
   function void reset();
-template_end
-template_context 06_uvm_api.09_tlm2.05_uvm_tlm_time.function.1181
-template_name set_abstime(real t, real secs);
-template_start
   function void set_abstime(real t, real secs);
-template_end
-template_context 06_uvm_api.09_tlm2.05_uvm_tlm_time.function.1182
-template_name set_time_resolution(real res);
-template_start
   static function void set_time_resolution(real res);
-template_end
-template_context 06_uvm_api.09_tlm2.05_uvm_tlm_time.function.1183
-template_name to_m_res(real t, time scaled, real secs);
-template_start
   local function real to_m_res(real t, time scaled, real secs);
-template_end
-template_context 06_uvm_api.00_base.00_uvm_barrier.task.1184
-template_name m_trigger();
-template_start
  local task m_trigger();
-template_end
-template_context 06_uvm_api.00_base.00_uvm_barrier.task.1185
-template_name wait_for();
-template_start
  virtual task wait_for();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1186
-template_name configure_phase(uvm_phase phase);
-template_start
  extern virtual task configure_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1187
-template_name main_phase(uvm_phase phase);
-template_start
  extern virtual task main_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1188
-template_name post_configure_phase(uvm_phase phase);
-template_start
  extern virtual task post_configure_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1189
-template_name post_main_phase(uvm_phase phase);
-template_start
  extern virtual task post_main_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1190
-template_name post_reset_phase(uvm_phase phase);
-template_start
  extern virtual task post_reset_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1191
-template_name post_shutdown_phase(uvm_phase phase);
-template_start
  extern virtual task post_shutdown_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1192
-template_name pre_configure_phase(uvm_phase phase);
-template_start
  extern virtual task pre_configure_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1193
-template_name pre_main_phase(uvm_phase phase);
-template_start
  extern virtual task pre_main_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1194
-template_name pre_reset_phase(uvm_phase phase);
-template_start
  extern virtual task pre_reset_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1195
-template_name pre_shutdown_phase(uvm_phase phase);
-template_start
  extern virtual task pre_shutdown_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1196
-template_name reset_phase(uvm_phase phase);
-template_start
  extern virtual task reset_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1197
-template_name resume ();
-template_start
  extern virtual task resume ();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1198
-template_name run();
-template_start
  extern virtual task run();
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1199
-template_name run_phase(uvm_phase phase);
-template_start
  extern virtual task run_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1200
-template_name shutdown_phase(uvm_phase phase);
-template_start
  extern virtual task shutdown_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.04_uvm_component.task.1201
-template_name suspend ();
-template_start
  extern virtual task suspend ();
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.task.1202
-template_name wait_off(bit delta = 0);
-template_start
wait_off (bit delta = 0);
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.task.1203
-template_name wait_on(bit delta = 0);
-template_start
wait_on(bit delta = 0);
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.task.1204
-template_name wait_ptrigger();
-template_start
wait_ptrigger ();
-template_end
-template_context 06_uvm_api.00_base.09_uvm_event.task.1205
-template_name wait_trigger();
-template_start
wait_trigger ();
-template_end
-template_context 06_uvm_api.00_base.12_uvm_globals.task.1206
-template_name run_test (string test_name="");
-template_start
task run_test (string test_name="");
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.task.1207
-template_name exec_task(uvm_component comp, uvm_phase phase); endtask
-template_start
  virtual task exec_task(uvm_component comp, uvm_phase phase); endtask
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.task.1208
-template_name execute_phase();
-template_start
  extern local task  execute_phase();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.task.1209
-template_name m_run_phases();
-template_start
  extern static task m_run_phases();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.task.1210
-template_name m_wait_for_pred();
-template_start
  extern local task m_wait_for_pred();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.task.1211
-template_name wait_for_self_and_siblings_to_drop();
-template_start
  extern local task wait_for_self_and_siblings_to_drop();
-template_end
-template_context 06_uvm_api.00_base.18_uvm_phase.task.1212
-template_name wait_for_state(uvm_phase_state state, uvm_wait_op op=UVM_EQ);
-template_start
  extern task wait_for_state(uvm_phase_state state, uvm_wait_op op=UVM_EQ);
-template_end
-template_context 06_uvm_api.00_base.21_uvm_port_base.task.1213
-template_name do_task_phase (uvm_phase phase);
-template_start
  virtual task do_task_phase (uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.23_uvm_queue.task.1214
-template_name wait_until_not_empty();
-template_start
  virtual task wait_until_not_empty();
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.task.1215
-template_name run_phase (uvm_phase phase);
-template_start
	extern virtual task run_phase (uvm_phase phase);
-template_end
-template_context 06_uvm_api.00_base.33_uvm_root.task.1216
-template_name run_test (string test_name="");
-template_start
	extern virtual task run_test (string test_name="");
-template_end
-template_context 06_uvm_api.00_base.35_uvm_runtime_phases.task.1217
-template_name exec_task(uvm_component comp, uvm_phase phase);
-template_start
   virtual task exec_task(uvm_component comp, uvm_phase phase);
-template_end
-template_context 06_uvm_api.01_comps.04_uvm_in_order_comparator.task.1218
-template_name run_phase(uvm_phase phase);
-template_start
  virtual task run_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.01_comps.08_uvm_push_driver.task.1219
-template_name put(REQ item);
-template_start
  virtual task put(REQ item);
-template_end
-template_context 06_uvm_api.01_comps.09_uvm_random_stimulus.task.1220
-template_name generate_stimulus(T t=null, int max_count=0);
-template_start
  virtual task generate_stimulus(T t=null, int max_count=0);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.task.1221
-template_name uvm_hdl_force_time(string path, uvm_hdl_data_t value, time force_time = 0);
-template_start
  task uvm_hdl_force_time(string path, uvm_hdl_data_t value, time force_time = 0);
-template_end
-template_context 06_uvm_api.03_dpi.00_uvm_hdl.task.1222
-template_name uvm_hdl_force_time(string path, uvm_hdl_data_t value, time force_time=0);
-template_start
  task uvm_hdl_force_time(string path, uvm_hdl_data_t value, time force_time=0);
-template_end
-template_context 06_uvm_api.04_macros.01_uvm_phase_defines.task.1223
-template_name exec_task(uvm_component comp, uvm_phase phase); \
-template_start
          virtual task exec_task(uvm_component comp, uvm_phase phase); \
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.task.1224
-template_name backdoor_read(uvm_reg_item rw);
-template_start
   extern virtual protected task backdoor_read(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.task.1225
-template_name backdoor_write(uvm_reg_item rw);
-template_start
   extern virtual task backdoor_write(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.task.1226
-template_name do_read  (uvm_reg_item rw);
-template_start
   extern virtual task do_read  (uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.task.1227
-template_name do_write (uvm_reg_item rw);
-template_start
   extern virtual task do_write (uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.task.1228
-template_name post_read(uvm_reg_item rw); endtask
-template_start
   virtual task post_read(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.task.1229
-template_name post_write(uvm_reg_item rw); endtask
-template_start
   virtual task post_write(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.task.1230
-template_name pre_read(uvm_reg_item rw); endtask
-template_start
   virtual task pre_read(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.00_uvm_mem.task.1231
-template_name pre_write(uvm_reg_item rw); endtask
-template_start
   virtual task pre_write(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.task.1232
-template_name XatomicX(bit on);
-template_start
   /*local*/ extern task XatomicX(bit on);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.task.1233
-template_name backdoor_read(uvm_reg_item rw);
-template_start
   extern virtual task backdoor_read(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.task.1234
-template_name backdoor_watch(); endtask
-template_start
   virtual task  backdoor_watch(); endtask
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.task.1235
-template_name backdoor_write(uvm_reg_item rw);
-template_start
   extern virtual task backdoor_write(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.task.1236
-template_name do_read(uvm_reg_item rw);
-template_start
   extern virtual task do_read(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.task.1237
-template_name do_write(uvm_reg_item rw);
-template_start
   extern virtual task do_write(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.task.1238
-template_name post_read(uvm_reg_item rw); endtask
-template_start
   virtual task post_read(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.task.1239
-template_name post_write(uvm_reg_item rw); endtask
-template_start
   virtual task post_write(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.task.1240
-template_name pre_read(uvm_reg_item rw); endtask
-template_start
   virtual task pre_read(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.02_uvm_reg.task.1241
-template_name pre_write(uvm_reg_item rw); endtask
-template_start
   virtual task pre_write(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.task.1242
-template_name do_post_read(uvm_reg_item rw);
-template_start
   protected task do_post_read(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.task.1243
-template_name do_post_write(uvm_reg_item rw);
-template_start
   protected task do_post_write(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.task.1244
-template_name do_pre_read(uvm_reg_item rw);
-template_start
   protected task do_pre_read(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.task.1245
-template_name do_pre_write(uvm_reg_item rw);
-template_start
   protected task do_pre_write(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.task.1246
-template_name post_read(uvm_reg_item rw); endtask
-template_start
   virtual task post_read(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.task.1247
-template_name post_write(uvm_reg_item rw); endtask
-template_start
   virtual task post_write(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.task.1248
-template_name pre_read(uvm_reg_item rw); endtask
-template_start
   virtual task pre_read(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.task.1249
-template_name pre_write(uvm_reg_item rw); endtask
-template_start
   virtual task pre_write(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.task.1250
-template_name read(uvm_reg_item rw);
-template_start
   extern virtual task read(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.task.1251
-template_name wait_for_change(uvm_object element);
-template_start
   extern virtual local task wait_for_change(uvm_object element);
-template_end
-template_context 06_uvm_api.05_reg.04_uvm_reg_backdoor.task.1252
-template_name write(uvm_reg_item rw);
-template_start
   extern virtual task write(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.task.1253
-template_name readmemh(string filename);
-template_start
   extern virtual task readmemh(string filename);
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.task.1254
-template_name wait_for_lock();
-template_start
   virtual task wait_for_lock();
-template_end
-template_context 06_uvm_api.05_reg.05_uvm_reg_block.task.1255
-template_name writememh(string filename);
-template_start
   extern virtual task writememh(string filename);
-template_end
-template_context 06_uvm_api.05_reg.06_uvm_reg_cbs.task.1256
-template_name post_read(uvm_reg_item rw); endtask
-template_start
   virtual task post_read(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.06_uvm_reg_cbs.task.1257
-template_name post_write(uvm_reg_item rw); endtask
-template_start
   virtual task post_write(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.06_uvm_reg_cbs.task.1258
-template_name pre_read(uvm_reg_item rw); endtask
-template_start
   virtual task pre_read(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.06_uvm_reg_cbs.task.1259
-template_name pre_write(uvm_reg_item rw); endtask
-template_start
   virtual task pre_write(uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.task.1260
-template_name do_read(uvm_reg_item rw);
-template_start
   extern virtual task do_read(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.task.1261
-template_name do_write(uvm_reg_item rw);
-template_start
   extern virtual task do_write(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.task.1262
-template_name post_read  (uvm_reg_item rw); endtask
-template_start
   virtual task post_read  (uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.task.1263
-template_name post_write (uvm_reg_item rw); endtask
-template_start
   virtual task post_write (uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.task.1264
-template_name pre_read (uvm_reg_item rw); endtask
-template_start
   virtual task pre_read (uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.07_uvm_reg_field.task.1265
-template_name pre_write  (uvm_reg_item rw); endtask
-template_start
   virtual task pre_write  (uvm_reg_item rw); endtask
-template_end
-template_context 06_uvm_api.05_reg.08_uvm_reg_fifo.task.1266
-template_name pre_read(uvm_reg_item rw);
-template_start
    virtual task pre_read(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.08_uvm_reg_fifo.task.1267
-template_name pre_write(uvm_reg_item rw);
-template_start
    virtual task pre_write(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.13_uvm_reg_sequence.task.1268
-template_name body();
-template_start
  virtual task body();
-template_end
-template_context 06_uvm_api.05_reg.13_uvm_reg_sequence.task.1269
-template_name do_reg_item(uvm_reg_item rw);
-template_start
  virtual task do_reg_item(uvm_reg_item rw);
-template_end
-template_context 06_uvm_api.05_reg.14_uvm_vreg.task.1270
-template_name XatomicX(bit on);
-template_start
   /*local*/ extern task XatomicX(bit on);
-template_end
-template_context 06_uvm_api.06_seq.00_uvm_push_sequencer.task.1271
-template_name run_phase(uvm_phase phase);
-template_start
  task run_phase(uvm_phase phase);
-template_end
-template_context 06_uvm_api.06_seq.01_uvm_sequence.task.1272
-template_name get_response(output RSP response, input int transaction_id = -1);
-template_start
  virtual task get_response(output RSP response, input int transaction_id = -1);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1273
-template_name body();
-template_start
  virtual task body();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1274
-template_name get_base_response(output uvm_sequence_item response, input int transaction_id = -1);
-template_start
  virtual task get_base_response(output uvm_sequence_item response, input int transaction_id = -1);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1275
-template_name grab(uvm_sequencer_base sequencer = null);
-template_start
  task grab(uvm_sequencer_base sequencer = null);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1276
-template_name lock(uvm_sequencer_base sequencer = null);
-template_start
  task lock(uvm_sequencer_base sequencer = null);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1277
-template_name post_body();
-template_start
  virtual task post_body();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1278
-template_name post_start();
-template_start
  virtual task post_start();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1279
-template_name pre_body();
-template_start
  virtual task pre_body();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1280
-template_name pre_do(bit is_item);
-template_start
  virtual task pre_do(bit is_item);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1281
-template_name pre_start();
-template_start
  virtual task pre_start();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1282
-template_name wait_for_grant(int item_priority = -1, bit lock_request = 0);
-template_start
  virtual task wait_for_grant(int item_priority = -1, bit lock_request = 0);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1283
-template_name wait_for_item_done(int transaction_id = -1);
-template_start
  virtual task wait_for_item_done(int transaction_id = -1);
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1284
-template_name wait_for_relevant();
-template_start
  virtual task wait_for_relevant();
-template_end
-template_context 06_uvm_api.06_seq.02_uvm_sequence_base.task.1285
-template_name wait_for_sequence_state(int unsigned state_mask);
-template_start
  task wait_for_sequence_state(int unsigned state_mask);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.task.1286
-template_name body();
-template_start
  virtual task body();
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.task.1287
-template_name pre_do(bit is_item);
-template_start
  virtual task pre_do(bit is_item);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.task.1288
-template_name wait_for_grant(int item_priority = -1, bit  lock_request = 0);
-template_start
  virtual task wait_for_grant(int item_priority = -1, bit  lock_request = 0);
-template_end
-template_context 06_uvm_api.06_seq.03_uvm_sequence_item.task.1289
-template_name wait_for_item_done(int transaction_id = -1);
-template_start
  virtual task wait_for_item_done(int transaction_id = -1);
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.task.1290
-template_name body();
-template_start
   extern virtual  task          body();
-template_end
-template_context 06_uvm_api.06_seq.04_uvm_sequence_library.task.1291
-template_name execute(uvm_object_wrapper wrap);
-template_start
   extern virtual  task          execute(uvm_object_wrapper wrap);
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.task.1292
-template_name get           (output REQ t);
-template_start
  extern task                  get           (output REQ t);
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.task.1293
-template_name get_next_item (output REQ t);
-template_start
  extern virtual task          get_next_item (output REQ t);
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.task.1294
-template_name peek          (output REQ t);
-template_start
  extern task                  peek          (output REQ t);
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.task.1295
-template_name put           (RSP t);
-template_start
  extern virtual task          put           (RSP t);
-template_end
-template_context 06_uvm_api.06_seq.05_uvm_sequencer.task.1296
-template_name try_next_item (output REQ t);
-template_start
  extern virtual task          try_next_item (output REQ t);
-template_end
-template_context 06_uvm_api.07_sequences.00_uvm_mem_access_seq.task.1297
-template_name body();
-template_start
   virtual task body();
-template_end
-template_context 06_uvm_api.07_sequences.01_uvm_mem_walk_seq.task.1298
-template_name body();
-template_start
   virtual task body();
-template_end
-template_context 06_uvm_api.07_sequences.02_uvm_reg_access_seq.task.1299
-template_name body();
-template_start
   virtual task body();
-template_end
-template_context 06_uvm_api.07_sequences.03_uvm_reg_bit_bash_seq.task.1300
-template_name body();
-template_start
   virtual task body();
-template_end
-template_context 06_uvm_api.07_sequences.04_uvm_reg_hw_reset_seq.task.1301
-template_name body();
-template_start
   virtual task body();
-template_end
-template_context 06_uvm_api.07_sequences.04_uvm_reg_hw_reset_seq.task.1302
-template_name do_block(uvm_reg_block blk);
-template_start
   protected virtual task do_block(uvm_reg_block blk);
-template_end
-template_context 06_uvm_api.07_sequences.04_uvm_reg_hw_reset_seq.task.1303
-template_name reset_blk(uvm_reg_block blk);
-template_start
   virtual task reset_blk(uvm_reg_block blk);
-template_end
-template_context 06_uvm_api.07_sequences.05_uvm_reg_mem_built_in_seq.task.1304
-template_name body();
-template_start
   virtual task body();
-template_end
-template_context 06_uvm_api.07_sequences.06_uvm_reg_mem_hdl_paths_seq.task.1305
-template_name body();
-template_start
    virtual task body();
-template_end
-template_context 06_uvm_api.07_sequences.06_uvm_reg_mem_hdl_paths_seq.task.1306
-template_name reset_blk(uvm_reg_block blk);
-template_start
    virtual task reset_blk(uvm_reg_block blk);
-template_end
-template_context 06_uvm_api.07_sequences.07_uvm_reg_mem_shared_access_seq.task.1307
-template_name body();
-template_start
   virtual task body();
-template_end
-template_context 06_uvm_api.08_tlm1.01_uvm_sqr_ifs.task.1308
-template_name get(output T1 t);
-template_start
  virtual task get(output T1 t);
-template_end
-template_context 06_uvm_api.08_tlm1.01_uvm_sqr_ifs.task.1309
-template_name get_next_item(output T1 t);
-template_start
  virtual task get_next_item(output T1 t);
-template_end
-template_context 06_uvm_api.08_tlm1.01_uvm_sqr_ifs.task.1310
-template_name peek(output T1 t);
-template_start
  virtual task peek(output T1 t);
-template_end
-template_context 06_uvm_api.08_tlm1.01_uvm_sqr_ifs.task.1311
-template_name put(input T2 t);
-template_start
  virtual task put(input T2 t);
-template_end
-template_context 06_uvm_api.08_tlm1.01_uvm_sqr_ifs.task.1312
-template_name try_next_item(output T1 t);
-template_start
  virtual task try_next_item(output T1 t);
-template_end
-template_context 06_uvm_api.08_tlm1.01_uvm_sqr_ifs.task.1313
-template_name wait_for_sequences();
-template_start
  virtual task wait_for_sequences();
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.task.1314
-template_name get( output T t );
-template_start
  virtual task get( output T t );
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.task.1315
-template_name peek( output T t );
-template_start
  virtual task peek( output T t );
-template_end
-template_context 06_uvm_api.08_tlm1.02_uvm_tlm_fifos.task.1316
-template_name put( input T t );
-template_start
  virtual task put( input T t );
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.task.1317
-template_name get( output T2 t );
-template_start
  virtual task get( output T2 t );
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.task.1318
-template_name peek( output T2 t );
-template_start
  virtual task peek( output T2 t );
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.task.1319
-template_name put( input T1 t );
-template_start
  virtual task put( input T1 t );
-template_end
-template_context 06_uvm_api.08_tlm1.03_uvm_tlm_ifs.task.1320
-template_name transport( input T1 req , output T2 rsp );
-template_start
  virtual task transport( input T1 req , output T2 rsp );
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.task.1321
-template_name get (output TYPE arg); \
-template_start
  task get (output TYPE arg); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.task.1322
-template_name peek (output TYPE arg); \
-template_start
  task peek (output TYPE arg); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.task.1323
-template_name put (TYPE arg); \
-template_start
  task put (TYPE arg); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.task.1324
-template_name put (TYPE arg); \
-template_start
  task put (TYPE arg); \
-template_end
-template_context 06_uvm_api.08_tlm1.04_uvm_tlm_imps.task.1325
-template_name transport (REQ req_arg, output RSP rsp_arg); \
-template_start
  task transport (REQ req_arg, output RSP rsp_arg); \
-template_end
-template_context 06_uvm_api.09_tlm2.01_uvm_tlm2_ifs.task.1326
-template_name b_transport(T t, uvm_tlm_time delay);
-template_start
  virtual task b_transport(T t, uvm_tlm_time delay);
-template_end
-template_context 06_uvm_api.09_tlm2.02_uvm_tlm2_imps.task.1327
-template_name b_transport(T t, uvm_tlm_time delay);                              \
-template_start
  task b_transport(T t, uvm_tlm_time delay);                              \
-template_end
